<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Testing.Platform</name>
    </assembly>
    <members>
        <member name="M:System.Runtime.CompilerServices.CollectionBuilderAttribute.#ctor(System.Type,System.String)">
            <summary>Initialize the attribute to refer to the <paramref name="methodName"/> method on the <paramref name="builderType"/> type.</summary>
            <param name="builderType">The type of the builder to use to construct the collection.</param>
            <param name="methodName">The name of the method on the builder to use to construct the collection.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.BuilderType">
            <summary>Gets the type of the builder to use to construct the collection.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.MethodName">
            <summary>Gets the name of the method on the builder to use to construct the collection.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute">
            <summary>
            Specifies the priority of a member in overload resolution. When unspecified, the default priority is 0.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute"/> class.
            </summary>
            <param name="priority">The priority of the attributed member. Higher numbers are prioritized,
            lower numbers are deprioritized. 0 is the default if no attribute is present.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.Priority">
            <summary>
            The priority of the member.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ParamCollectionAttribute">
            <summary>
            Indicates that a method allows a variable number of arguments in its invocation.
            </summary>
        </member>
        <member name="T:System.Diagnostics.DebuggerDisableUserUnhandledExceptionsAttribute">
            <summary>
            If a .NET Debugger is attached that supports the <see cref="!:Debugger.BreakForUserUnhandledException(System.Exception)" /> API, the debugger won't break on user-unhandled exceptions when the exception is caught by a method with this attribute, unless <see cref="!:Debugger.BreakForUserUnhandledException(System.Exception)" /> is called.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute">
            <summary>
            Indicates that a parameter captures the expression passed for another parameter as a string.
            </summary>
            <summary>
             Indicates that an API is experimental and it may change in the future.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute"/> class, specifying the ID that the compiler will use
             when reporting a use of the API the attribute applies to.
            </summary>
            <param name="diagnosticId">The ID that the compiler will use when reporting a use of the API the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.DiagnosticId">
            <summary>
             Gets the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <value>The unique diagnostic ID.</value>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.UrlFormat">
            <summary>
             Gets or sets the URL for corresponding documentation.
             The API accepts a format string instead of an actual URL, creating a generic URL that includes the diagnostic ID.
            </summary>
            <value>The format string that represents a URL to corresponding documentation.</value>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.FeatureGuardAttribute">
            <summary>
            Indicates that the specified public static boolean get-only property
            guards access to the specified feature.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.FeatureGuardAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.FeatureGuardAttribute"/> class
            with the specified feature type.
            </summary>
            <param name="featureType">
            The type that represents the feature guarded by the property.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.FeatureGuardAttribute.FeatureType">
            <summary>
            The type that represents the feature guarded by the property.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.FeatureSwitchDefinitionAttribute">
            <summary>
            [AttributeUsage(AttributeTargets.Property, Inherited = false)]
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.FeatureSwitchDefinitionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.FeatureSwitchDefinitionAttribute"/> class
            with the specified feature switch name.
            </summary>
            <param name="switchName">
            The name of the feature switch that provides the value for the specified property.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.FeatureSwitchDefinitionAttribute.SwitchName">
            <summary>
            The name of the feature switch that provides the value for the specified property.
            </summary>
        </member>
        <member name="T:System.Threading.Lock">
            <summary>
            Provides a way to get mutual exclusion in regions of code between different threads. A lock may be held by one thread at
            a time.
            </summary>
        </member>
        <member name="M:System.Threading.Lock.Enter">
            <summary>
            Enters the lock. Once the method returns, the calling thread would be the only thread that holds the lock.
            </summary>
        </member>
        <member name="M:System.Threading.Lock.TryEnter">
            <summary>
            Tries to enter the lock without waiting. If the lock is entered, the calling thread would be the only thread that
            holds the lock.
            </summary>
            <returns>
            <code>true</code> if the lock was entered, <code>false</code> otherwise.
            </returns>
        </member>
        <member name="M:System.Threading.Lock.TryEnter(System.TimeSpan)">
            <summary>
            Tries to enter the lock, waiting for roughly the specified duration. If the lock is entered, the calling thread
            would be the only thread that holds the lock.
            </summary>
            <param name="timeout">
            The rough duration for which the method will wait if the lock is not available. The timeout is converted to a number
            of milliseconds by casting <see cref="P:System.TimeSpan.TotalMilliseconds"/> of the timeout to an integer value. A value
            representing <code>0</code> milliseconds specifies that the method should not wait, and a value representing
            <see cref="F:System.Threading.Timeout.Infinite"/> or <code>-1</code> milliseconds specifies that the method should wait indefinitely
            until the lock is entered.
            </param>
            <returns>
            <code>true</code> if the lock was entered, <code>false</code> otherwise.
            </returns>
        </member>
        <member name="M:System.Threading.Lock.TryEnter(System.Int32)">
            <summary>
            Tries to enter the lock, waiting for roughly the specified duration. If the lock is entered, the calling thread
            would be the only thread that holds the lock.
            </summary>
            <param name="millisecondsTimeout">
            The rough duration in milliseconds for which the method will wait if the lock is not available. A value of
            <code>0</code> specifies that the method should not wait, and a value of <see cref="F:System.Threading.Timeout.Infinite"/> or
            <code>-1</code> specifies that the method should wait indefinitely until the lock is entered.
            </param>
            <returns>
            <code>true</code> if the lock was entered, <code>false</code> otherwise.
            </returns>
        </member>
        <member name="M:System.Threading.Lock.Exit">
            <summary>
            Exits the lock.
            </summary>
        </member>
        <member name="M:System.Threading.Lock.EnterScope">
            <summary>
            Enters the lock and returns a <see cref="T:System.Threading.Lock.Scope"/> that may be disposed to exit the lock. Once the method returns,
            the calling thread would be the only thread that holds the lock. This method is intended to be used along with a
            language construct that would automatically dispose the <see cref="T:System.Threading.Lock.Scope"/>, such as with the C# <code>using</code>
            statement.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Lock.Scope"/> that may be disposed to exit the lock.
            </returns>
        </member>
        <member name="T:System.Threading.Lock.Scope">
            <summary>
            A disposable structure that is returned by <see cref="M:System.Threading.Lock.EnterScope"/>, which when disposed, exits the lock.
            </summary>
        </member>
        <member name="M:System.Threading.Lock.Scope.#ctor(System.Threading.Lock)">
            <summary>
            A disposable structure that is returned by <see cref="M:System.Threading.Lock.EnterScope"/>, which when disposed, exits the lock.
            </summary>
        </member>
        <member name="M:System.Threading.Lock.Scope.Dispose">
            <summary>
            Exits the lock.
            </summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the GetRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.GetRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetFrameRegex_1">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the GetFrameRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.GetFrameRegex_1.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetFrameRegex_1.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetFrameRegex_1.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetFrameRegex_1.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetFrameRegex_1.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetFrameRegex_1.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetFrameRegex_1.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetFrameRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)">
            <summary>Pushes 2 values onto the backtracking stack.</summary>
        </member>
        <member name="M:Polyfills.DateTimeOffsetPolyfill.TryParse(System.String,System.IFormatProvider,System.DateTimeOffset@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimeOffsetPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.DateTimeOffset@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimeOffsetPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.DateTimeOffset@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimeOffsetPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimeOffsetPolyfill.TryParseExact(System.ReadOnlySpan{System.Char},System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimeOffsetPolyfill.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimePolyfill.TryParse(System.String,System.IFormatProvider,System.DateTime@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.DateTime@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.DateTime@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimePolyfill.TryParseExact(System.ReadOnlySpan{System.Char},System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DateTimePolyfill.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DelegatePolyfill.EnumerateInvocationList``1(``0)">
            <summary>
            Gets an enumerator for the invocation targets of this delegate.
            </summary>
        </member>
        <member name="T:Polyfills.DelegatePolyfill.InvocationListEnumerator`1">
            <summary>
            Provides an enumerator for the invocation list of a delegate.
            </summary>
            <typeparam name="TDelegate">Delegate type being enumerated.</typeparam>
        </member>
        <member name="M:Polyfills.EnumPolyfill.GetValues``1">
            <summary>
            Retrieves an array of the values of the constants in a specified enumeration type.
            </summary>
            <returns>An array that contains the values of the constants in TEnum.</returns>
        </member>
        <member name="M:Polyfills.EnumPolyfill.IsDefined``1(``0)">
            <summary>Returns a <see cref="T:System.Boolean"/> telling whether a given integral value exists in a specified enumeration.</summary>
            <typeparam name="TEnum">The type of the enumeration.</typeparam>
            <param name="value">The value in <typeparamref name="TEnum"/>.</param>
            <returns><see langword="true"/> if a given integral value exists in a specified enumeration; <see langword="false"/>, otherwise.</returns>
        </member>
        <member name="M:Polyfills.EnumPolyfill.GetNames``1">
            <summary>
            Retrieves an array of the names of the constants in a specified enumeration type.
            </summary>
            <returns>A string array of the names of the constants in TEnum.</returns>
        </member>
        <member name="M:Polyfills.EnumPolyfill.Parse``1(System.String)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants specified by TEnum to an equivalent enumerated object.
            </summary>
        </member>
        <member name="M:Polyfills.EnumPolyfill.Parse``1(System.String,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants specified by TEnum to an equivalent enumerated object.
            </summary>
        </member>
        <member name="M:Polyfills.EnumPolyfill.Parse``1(System.ReadOnlySpan{System.Char})">
            <summary>
            Converts the span of characters representation of the name or numeric value of one or more enumerated constants specified by TEnum to an equivalent enumerated object.
            </summary>
        </member>
        <member name="M:Polyfills.EnumPolyfill.Parse``1(System.ReadOnlySpan{System.Char},System.Boolean)">
            <summary>
            Converts the span of characters representation of the name or numeric value of one or more enumerated constants specified by TEnum to an equivalent enumerated object.
            </summary>
        </member>
        <member name="M:Polyfills.EnumPolyfill.TryParse``1(System.ReadOnlySpan{System.Char},``0@)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
            </summary>
        </member>
        <member name="M:Polyfills.EnumPolyfill.TryParse``1(System.ReadOnlySpan{System.Char},System.Boolean,``0@)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.GuidPolyfill.TryParse(System.String,System.IFormatProvider,System.Guid@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.GuidPolyfill.CreateVersion7">
            <summary>Creates a new <see cref="T:System.Guid" /> according to RFC 9562, following the Version 7 format.</summary>
            <returns>A new <see cref="T:System.Guid" /> according to RFC 9562, following the Version 7 format.</returns>
        </member>
        <member name="M:Polyfills.GuidPolyfill.CreateVersion7(System.DateTimeOffset)">
            <summary>Creates a new <see cref="T:System.Guid" /> according to RFC 9562, following the Version 7 format.</summary>
            <param name="timestamp">The date time offset used to determine the Unix Epoch timestamp.</param>
            <returns>A new <see cref="T:System.Guid" /> according to RFC 9562, following the Version 7 format.</returns>
        </member>
        <member name="M:Polyfills.GuidPolyfill.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Guid@)">
            <summary>
            Converts span of characters representing the GUID to the equivalent Guid structure, provided that the string is in the specified format.
            </summary>
        </member>
        <member name="M:Polyfills.GuidPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Guid@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.GuidPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Guid@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.BytePolyfill.TryParse(System.String,System.IFormatProvider,System.Byte@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.BytePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Byte@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.BytePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Byte@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its byte equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.BytePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Byte@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.BytePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.BytePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its byte equivalent.
            </summary>
        </member>
        <member name="M:Polyfills.BytePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its byte equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.DoublePolyfill.TryParse(System.String,System.IFormatProvider,System.Double@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DoublePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DoublePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Double@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
        </member>
        <member name="M:Polyfills.DoublePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DoublePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.DoublePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Double@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its double-precision floating-point number equivalent..
            </summary>
        </member>
        <member name="M:Polyfills.DoublePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
            <summary>
            Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
        </member>
        <member name="M:Polyfills.IntPolyfill.TryParse(System.String,System.IFormatProvider,System.Int32@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.IntPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.IntPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.IntPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.IntPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.IntPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its 32-bit signed integer equivalent.
            </summary>
        </member>
        <member name="M:Polyfills.IntPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.LongPolyfill.TryParse(System.String,System.IFormatProvider,System.Int64@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.LongPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int64@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.LongPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Int64@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.LongPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int64@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.LongPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.LongPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its 64-bit signed integer equivalent.
            </summary>
        </member>
        <member name="M:Polyfills.LongPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.SBytePolyfill.TryParse(System.String,System.IFormatProvider,System.SByte@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.SBytePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.SByte@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.SBytePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.SByte@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its sbyte equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.SBytePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.SByte@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.SBytePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.SBytePolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its sbyte equivalent.
            </summary>
        </member>
        <member name="M:Polyfills.SBytePolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its sbyte equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.ShortPolyfill.TryParse(System.String,System.IFormatProvider,System.Int16@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.ShortPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int16@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.ShortPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Int16@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its short equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.ShortPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int16@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.ShortPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.ShortPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its short equivalent.
            </summary>
        </member>
        <member name="M:Polyfills.ShortPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its short equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.UIntPolyfill.TryParse(System.String,System.IFormatProvider,System.UInt32@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.UIntPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.UInt32@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.UIntPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.UInt32@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its uint equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.UIntPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.UInt32@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.UIntPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.UIntPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its uint equivalent.
            </summary>
        </member>
        <member name="M:Polyfills.UIntPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its uint equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.ULongPolyfill.TryParse(System.String,System.IFormatProvider,System.UInt64@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.ULongPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.UInt64@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.ULongPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.UInt64@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its ulong equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.ULongPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.UInt64@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.ULongPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.ULongPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its ulong equivalent.
            </summary>
        </member>
        <member name="M:Polyfills.ULongPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its ulong equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.UShortPolyfill.TryParse(System.String,System.IFormatProvider,System.UInt16@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
        </member>
        <member name="M:Polyfills.UShortPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.UInt16@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.UShortPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.UInt16@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its ushort equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.UShortPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.UInt16@)">
            <summary>
            Tries to parse a span of characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.UShortPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)">
            <summary>
            Tries to parse a span of UTF-8 characters into a value.
            </summary>
        </member>
        <member name="M:Polyfills.UShortPolyfill.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@)">
            <summary>
            Tries to convert a UTF-8 character span containing the string representation of a number to its ushort equivalent.
            </summary>
        </member>
        <member name="M:Polyfills.UShortPolyfill.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)">
            <summary>
            Converts the span representation of a number in a specified style and culture-specific format to its ushort equivalent. A return value indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:Polyfills.PathPolyfill.GetDirectoryName(System.ReadOnlySpan{System.Char})">
            <summary>
            Returns the directory information for the specified path represented by a character span.
            </summary>
            <param name="path">The path to retrieve the directory information from.</param>
        </member>
        <member name="M:Polyfills.PathPolyfill.GetFileName(System.ReadOnlySpan{System.Char})">
            <summary>
            Returns the file name and extension of a file path that is represented by a read-only character span.
            </summary>
            <param name="path">A read-only span that contains the path from which to obtain the file name and extension.</param>
            <returns>The characters after the last directory separator character in path.</returns>
        </member>
        <member name="M:Polyfills.PathPolyfill.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})">
            <summary>
            Returns the file name without the extension of a file path that is represented by a read-only character span.
            </summary>
            <param name="path">A read-only span that contains the path from which to obtain the file name without the extension.</param>
        </member>
        <member name="M:Polyfills.PathPolyfill.HasExtension(System.ReadOnlySpan{System.Char})">
            <summary>
            Determines whether the path represented by the specified character span includes a file name extension.
            </summary>
            <param name="path">The path to search for an extension.</param>
            <returns>true if the characters that follow the last directory separator character or volume separator in the path include a period (".") followed by one or more characters; otherwise, false.</returns>
        </member>
        <member name="M:Polyfills.PathPolyfill.GetExtension(System.ReadOnlySpan{System.Char})">
            <summary>
            Returns the extension of the given path.
            </summary>
        </member>
        <member name="M:Polyfills.PathPolyfill.Combine(System.ReadOnlySpan{System.String})">
            <summary>
            Combines a span of strings into a path.
            </summary>
            <param name="paths">A span of parts of the path.</param>
            <returns>The combined paths.</returns>
        </member>
        <member name="M:Polyfills.PathPolyfill.EndsInDirectorySeparator(System.ReadOnlySpan{System.Char})">
            <summary>
            Returns a value that indicates whether the path, specified as a read-only span, ends in a directory separator.
            </summary>
            <param name="path">The path to analyze.</param>
            <returns>true if the path ends in a directory separator; otherwise, false.</returns>
        </member>
        <member name="M:Polyfills.PathPolyfill.TrimEndingDirectorySeparator(System.ReadOnlySpan{System.Char})">
            <summary>
            Trims one trailing directory separator beyond the root of the specified path.
            </summary>
            <param name="path">The path to trim.</param>
            <returns>The path without any trailing directory separators.</returns>
        </member>
        <member name="M:Polyfills.PathPolyfill.EndsInDirectorySeparator(System.String)">
            <summary>
            Returns a value that indicates whether the specified path ends in a directory separator.
            </summary>
            <param name="path">The path to analyze.</param>
            <returns>true if the path ends in a directory separator; otherwise, false.</returns>
        </member>
        <member name="M:Polyfills.PathPolyfill.TrimEndingDirectorySeparator(System.String)">
            <summary>
            Trims one trailing directory separator beyond the root of the specified path.
            </summary>
            <param name="path">The path to trim.</param>
            <returns>The path without any trailing directory separators.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Polyfills.PathPolyfill.Exists(System.String)" -->
        <member name="M:Polyfills.Polyfill.CancelAsync(System.Threading.CancellationTokenSource)">
            <summary>Communicates a request for cancellation asynchronously.</summary>
        </member>
        <member name="M:Polyfills.Polyfill.HasSingleTarget(System.Delegate)">
            <summary>
            Gets a value that indicates whether the Delegate has a single invocation target.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryGetChars(System.Text.Encoding,System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@)">
             <summary>Decodes into a span of chars a set of bytes from the specified read-only span if the destination is large enough.</summary>
             <param name="bytes">A read-only span containing the sequence of bytes to decode.</param>
             <param name="chars">The character span receiving the decoded bytes.</param>
             <param name="charsWritten">Upon successful completion of the operation, the number of chars decoded into <paramref name="chars"/>.</param>
             <returns><see langword="true"/> if all of the characters were decoded into the destination; <see langword="false"/> if the destination was too small to contain all the decoded chars.</returns>
            Link: https://learn.microsoft.com/en-us/dotnet/api/system.text.encoding.trygetchars
        </member>
        <member name="M:Polyfills.Polyfill.TryGetBytes(System.Text.Encoding,System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)">
             <summary>Encodes into a span of bytes a set of characters from the specified read-only span if the destination is large enough.</summary>
             <param name="chars">The span containing the set of characters to encode.</param>
             <param name="bytes">The byte span to hold the encoded bytes.</param>
             <param name="bytesWritten">Upon successful completion of the operation, the number of bytes encoded into <paramref name="bytes"/>.</param>
             <returns><see langword="true"/> if all of the characters were encoded into the destination; <see langword="false"/> if the destination was too small to contain all the encoded bytes.</returns>
            Link: https://learn.microsoft.com/en-us/dotnet/api/system.text.encoding.trygetbytes
        </member>
        <member name="M:Polyfills.Polyfill.AggregateBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``2,System.Func{``2,``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-9/overview#linq
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.AggregateBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,``2},System.Func{``2,``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-9/overview#linq
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.CountBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-9/overview#linq
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.Except``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Produces a set items excluding <paramref name="item"/> by using the default equality comparer to compare values.
            </summary>
            <param name="target">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that are not equal to <paramref name="item"/> will be returned.</param>
            <param name="item">An <see cref="!:TSource"/> that is elements equal it will cause those elements to be removed from the returned sequence.</param>
            <typeparam name="TSource">The type of the elements of <paramref name="target" />.</typeparam>
            <returns>A sequence that contains the items of <paramref name="target"/> but excluding <paramref name="item"/>.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.Except``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces a set items excluding <paramref name="item"/> by using <paramref name="comparer"/> to compare values.
            </summary>
            <param name="target">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that are not equal to <paramref name="item"/> will be returned.</param>
            <param name="item">An <see cref="!:TSource"/> that is elements equal it will cause those elements to be removed from the returned sequence.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare values.</param>
            <typeparam name="TSource">The type of the elements of <paramref name="target" />.</typeparam>
            <returns>A sequence that contains the items of <paramref name="target"/> but excluding <paramref name="item"/>.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},``0[])">
            <summary>
            Produces the set difference of two sequences by <paramref name="comparer"/> to compare values.
            </summary>
            <param name="target">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that are not equal to <paramref name="item"/> will be returned.</param>
            <param name="item">An <see cref="!:TSource"/> that is elements equal it will cause those elements to be removed from the returned sequence.</param>
            <typeparam name="TSource">The type of the elements of <paramref name="target" />.</typeparam>
            <returns>A sequence that contains the items of <paramref name="target"/> but excluding <paramref name="item"/>.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.Index``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-9/overview#linq
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.AddRange``1(System.Collections.Generic.List{``0},System.ReadOnlySpan{``0})">
            <summary>Adds the elements of the specified span to the end of the <see cref="T:System.Collections.Generic.List`1"/>.</summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
            <param name="list">The list to which the elements should be added.</param>
            <param name="source">The span whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1"/>.</param>
        </member>
        <member name="M:Polyfills.Polyfill.InsertRange``1(System.Collections.Generic.List{``0},System.Int32,System.ReadOnlySpan{``0})">
            <summary>Inserts the elements of a span into the <see cref="T:System.Collections.Generic.List`1"/> at the specified index.</summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
            <param name="list">The list into which the elements should be inserted.</param>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="source">The span whose elements should be added to the <see cref="T:System.Collections.Generic.List`1"/>.</param>
        </member>
        <member name="M:Polyfills.Polyfill.CopyTo``1(System.Collections.Generic.List{``0},System.Span{``0})">
            <summary>Copies the entire <see cref="T:System.Collections.Generic.List`1"/> to a span.</summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
            <param name="list">The list from which the elements are copied.</param>
            <param name="destination">The span that is the destination of the elements copied from <paramref name="list"/>.</param>
        </member>
        <member name="M:Polyfills.Polyfill.EndsWith``1(System.ReadOnlySpan{``0},``0)">
            <summary>
            Determines whether the specified value appears at the end of the span.
            </summary>
            <param name="target">The span to search.</param>
            <param name="value">The value to compare.</param>
        </member>
        <member name="M:Polyfills.Polyfill.Split``1(System.ReadOnlySpan{``0},``0)">
            <summary>
            Returns a type that allows for enumeration of each element within a split span
            using the provided separator character.
            </summary>
            <typeparam name="T">The type of the elements.</typeparam>
            <param name="source">The source span to be enumerated.</param>
            <param name="separator">The separator character to be used to split the provided span.</param>
        </member>
        <member name="M:Polyfills.Polyfill.Split``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})">
            <summary>
            Returns a type that allows for enumeration of each element within a split span
            using the provided separator span.
            </summary>
            <typeparam name="T">The type of the elements.</typeparam>
            <param name="source">The source span to be enumerated.</param>
            <param name="separator">The separator span to be used to split the provided span.</param>
        </member>
        <member name="M:Polyfills.Polyfill.SplitAny``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})">
            <summary>
            Returns a type that allows for enumeration of each element within a split span
            using any of the provided elements.
            </summary>
            <typeparam name="T">The type of the elements.</typeparam>
            <param name="source">The source span to be enumerated.</param>
            <param name="separators">The separators to be used to split the provided span.</param>
        </member>
        <member name="T:Polyfills.Polyfill.SpanSplitEnumerator`1">
            <summary>
            Enables enumerating each split within a <see cref="T:System.ReadOnlySpan`1"/> that has been divided using one or more separators.
            </summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumerator`1._span">
            <summary>The input span being split.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumerator`1._separator">
            <summary>A single separator to use when <see cref="F:Polyfills.Polyfill.SpanSplitEnumerator`1._splitMode"/> is <see cref="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.SingleElement"/>.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumerator`1._separatorBuffer">
            <summary>
            A separator span to use when <see cref="F:Polyfills.Polyfill.SpanSplitEnumerator`1._splitMode"/> is <see cref="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.Sequence"/> (in which case
            it's treated as a single separator) or <see cref="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.Any"/> (in which case it's treated as a set of separators).
            </summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumerator`1._splitMode">
            <summary>Mode that dictates how the instance was configured and how its fields should be used in <see cref="M:Polyfills.Polyfill.SpanSplitEnumerator`1.MoveNext"/>.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumerator`1._startCurrent">
            <summary>The inclusive starting index in <see cref="F:Polyfills.Polyfill.SpanSplitEnumerator`1._span"/> of the current range.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumerator`1._endCurrent">
            <summary>The exclusive ending index in <see cref="F:Polyfills.Polyfill.SpanSplitEnumerator`1._span"/> of the current range.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumerator`1._startNext">
            <summary>The index in <see cref="F:Polyfills.Polyfill.SpanSplitEnumerator`1._span"/> from which the next separator search should start.</summary>
        </member>
        <member name="M:Polyfills.Polyfill.SpanSplitEnumerator`1.GetEnumerator">
            <summary>Gets an enumerator that allows for iteration over the split span.</summary>
            <returns>Returns a <see cref="T:Polyfills.Polyfill.SpanSplitEnumerator`1"/> that can be used to iterate over the split span.</returns>
        </member>
        <member name="P:Polyfills.Polyfill.SpanSplitEnumerator`1.Current">
            <summary>Gets the current element of the enumeration.</summary>
            <returns>Returns a <see cref="T:System.Range"/> instance that indicates the bounds of the current element withing the source span.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.SpanSplitEnumerator`1.#ctor(System.ReadOnlySpan{`0},System.ReadOnlySpan{`0})">
            <summary>Initializes the enumerator for <see cref="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.Any"/>.</summary>
        </member>
        <member name="M:Polyfills.Polyfill.SpanSplitEnumerator`1.#ctor(System.ReadOnlySpan{`0},System.ReadOnlySpan{`0},System.Boolean)">
            <summary>Initializes the enumerator for <see cref="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.Sequence"/> (or <see cref="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.EmptySequence"/> if the separator is empty).</summary>
        </member>
        <member name="M:Polyfills.Polyfill.SpanSplitEnumerator`1.#ctor(System.ReadOnlySpan{`0},`0)">
            <summary>Initializes the enumerator for <see cref="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.SingleElement"/>.</summary>
        </member>
        <member name="M:Polyfills.Polyfill.SpanSplitEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the enumeration.
            </summary>
            <returns><see langword="true"/> if the enumerator was successfully advanced to the next element; <see langword="false"/> if the enumerator has passed the end of the enumeration.</returns>
        </member>
        <member name="T:Polyfills.Polyfill.SpanSplitEnumeratorMode">
            <summary>Indicates in which mode <see cref="T:Polyfills.Polyfill.SpanSplitEnumerator`1"/> is operating, with regards to how it should interpret its state.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.None">
            <summary>Either a default <see cref="T:Polyfills.Polyfill.SpanSplitEnumerator`1"/> was used, or the enumerator has finished enumerating and there's no more work to do.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.SingleElement">
            <summary>A single T separator was provided.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.Any">
            <summary>A span of separators was provided, each of which should be treated independently.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.Sequence">
            <summary>The separator is a span of elements to be treated as a single sequence.</summary>
        </member>
        <member name="F:Polyfills.Polyfill.SpanSplitEnumeratorMode.EmptySequence">
            <summary>The separator is an empty sequence, such that no splits should be performed.</summary>
        </member>
        <member name="M:Polyfills.Polyfill.StartsWith``1(System.ReadOnlySpan{``0},``0)">
            <summary>
            Determines whether the specified value appears at the start of the span.
            </summary>
            <param name="target">The span to search.</param>
            <param name="value">The value to compare.</param>
        </member>
        <member name="M:Polyfills.Polyfill.Nanoseconds(System.TimeSpan)">
            <summary>
            Gets the nanosecond component of the time represented by the current <see cref="T:System.TimeSpan"/> object.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.Nanosecond(System.DateTime)">
            <summary>
            Gets the nanosecond component of the time represented by the current <see cref="T:System.DateTime"/> object.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.Nanosecond(System.DateTimeOffset)">
            <summary>
            Gets the nanosecond component of the time represented by the current <see cref="T:System.DateTimeOffset"/> object.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.Microseconds(System.TimeSpan)">
            <summary>
            Gets the microsecond component of the time represented by the current <see cref="T:System.TimeSpan"/> object.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.Microsecond(System.DateTime)">
            <summary>
            Gets the microsecond component of the time represented by the current <see cref="T:System.DateTime"/> object.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.Microsecond(System.DateTimeOffset)">
            <summary>
            Gets the microsecond component of the time represented by the current <see cref="T:System.DateTimeOffset"/> object.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.Shuffle``1(System.Random,``0[])">
            <summary>
            Performs an in-place shuffle of an array.
            </summary>
            <param name="index">The array to shuffle.</param>
            <typeparam name="T">The type of array.</typeparam>
        </member>
        <member name="M:Polyfills.Polyfill.Shuffle``1(System.Random,System.Span{``0})">
            <summary>
            Performs an in-place shuffle of a span.
            </summary>
            <param name="index">The span to shuffle.</param>
            <typeparam name="T">The type of span.</typeparam>
        </member>
        <member name="M:Polyfills.Polyfill.Append(System.Text.StringBuilder,System.Text.StringBuilder.AppendInterpolatedStringHandler@)">
            <summary>Appends the specified interpolated string to this instance.</summary>
            <param name="handler">The interpolated string to append.</param>
            <returns>A reference to this instance after the append operation has completed.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.Append(System.Text.StringBuilder,System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@)">
            <summary>Appends the specified interpolated string to this instance.</summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="handler">The interpolated string to append.</param>
            <returns>A reference to this instance after the append operation has completed.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.AppendLine(System.Text.StringBuilder,System.Text.StringBuilder.AppendInterpolatedStringHandler@)">
            <summary>Appends the specified interpolated string followed by the default line terminator to the end of the current StringBuilder object.</summary>
            <param name="handler">The interpolated string to append.</param>
            <returns>A reference to this instance after the append operation has completed.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.AppendLine(System.Text.StringBuilder,System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@)">
            <summary>Appends the specified interpolated string followed by the default line terminator to the end of the current StringBuilder object.</summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="handler">The interpolated string to append.</param>
            <returns>A reference to this instance after the append operation has completed.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.Replace(System.Text.StringBuilder,System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
            <summary>
            Replaces all instances of one string with another in part of this builder.
            </summary>
            <param name="oldValue">The string to replace.</param>
            <param name="newValue">The string to replace <paramref name="oldValue"/> with.</param>
            <param name="startIndex">The index to start in this builder.</param>
            <param name="count">The number of characters to read in this builder.</param>
        </member>
        <member name="M:Polyfills.Polyfill.Replace(System.Text.StringBuilder,System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Int32,System.Int32)">
            <summary>
            Replaces all instances of one read-only character span with another in part of this builder.
            </summary>
            <param name="oldValue">The read-only character span to replace.</param>
            <param name="newValue">The read-only character span to replace <paramref name="oldValue"/> with.</param>
            <param name="startIndex">The index to start in this builder.</param>
            <param name="count">The number of characters to read in this builder.</param>
        </member>
        <member name="M:Polyfills.Polyfill.FlushAsync(System.IO.TextWriter,System.Threading.CancellationToken)">
            <summary>
            Asynchronously clears all buffers for the current writer and causes any buffered data to
            be written to the underlying device.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous flush operation.</returns>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.TimeSpan,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.Guid,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char})">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.SByte,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.Byte,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.Int16,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.UInt16,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.Int32,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.UInt32,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.Int64,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.UInt64,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.Single,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.Double,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.Decimal,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.DateTimeOffset,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.DateTime,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.DateOnly,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.TryFormat(System.TimeOnly,System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Tries to format the value of the current instance into the provided span of characters.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.IsGenericMethodParameter(System.Type)">
            <summary>
            Gets a value that indicates whether the current Type represents a type parameter in the definition of a generic method.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.IsAssignableTo``1(System.Type)">
            <summary>
            Generic version of Type.IsAssignableTo https://learn.microsoft.com/en-us/dotnet/api/system.type.isassignableto.
            </summary>
        </member>
        <member name="M:Polyfills.Polyfill.IsAssignableFrom``1(System.Type)">
            <summary>
            Generic version of Type.IsAssignableFrom https://learn.microsoft.com/en-us/dotnet/api/system.type.isassignablefrom.
            </summary>
        </member>
        <member name="P:Polyfills.RandomPolyfill.Shared">
            <summary>
            Provides a thread-safe Random instance that may be used concurrently from any thread.
            </summary>
        </member>
        <member name="M:Polyfills.RegexPolyfill.IsMatch(System.ReadOnlySpan{System.Char},System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            Indicates whether the specified regular expression finds a match in the specified input span, using the specified matching options and time-out interval.
            </summary>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Polyfills.RegexPolyfill.IsMatch(System.ReadOnlySpan{System.Char},System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Indicates whether the specified regular expression finds a match in the specified input span, using the specified matching options.
            </summary>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Polyfills.RegexPolyfill.IsMatch(System.ReadOnlySpan{System.Char},System.String)">
            <summary>
            Indicates whether the specified regular expression finds a match in the specified input span.
            </summary>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Polyfills.RegexPolyfill.EnumerateMatches(System.ReadOnlySpan{System.Char},System.String)">
            <summary>
            Searches an input span for all occurrences of a regular expression and returns a Regex.ValueMatchEnumerator to iterate over the matches.
            </summary>
            <returns>A Regex.ValueMatchEnumerator to iterate over the matches.</returns>
        </member>
        <member name="M:Polyfills.RegexPolyfill.EnumerateMatches(System.ReadOnlySpan{System.Char},System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>
            Searches an input span for all occurrences of a regular expression and returns a Regex.ValueMatchEnumerator to iterate over the matches.
            </summary>
            <returns>A Regex.ValueMatchEnumerator to iterate over the matches.</returns>
        </member>
        <member name="M:Polyfills.RegexPolyfill.EnumerateMatches(System.ReadOnlySpan{System.Char},System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Searches an input span for all occurrences of a regular expression and returns a Regex.ValueMatchEnumerator to iterate over the matches.
            </summary>
            <returns>A Regex.ValueMatchEnumerator to iterate over the matches.</returns>
        </member>
        <member name="M:Polyfills.StringPolyfill.Join(System.Char,System.String[])">
            <summary>
            Concatenates an array of strings, using the specified separator between each member.
            </summary>
        </member>
        <member name="M:Polyfills.StringPolyfill.Join(System.Char,System.Object[])">
            <summary>
            Concatenates the string representations of an array of objects, using the specified separator between each member.
            </summary>
        </member>
        <member name="M:Polyfills.StringPolyfill.Join(System.Char,System.ReadOnlySpan{System.Object})">
            <summary>
            Concatenates the string representations of a span of objects, using the specified separator between each member.
            </summary>
        </member>
        <member name="M:Polyfills.StringPolyfill.Join(System.Char,System.ReadOnlySpan{System.String})">
            <summary>
            Concatenates a span of strings, using the specified separator between each member.
            </summary>
        </member>
        <member name="M:Polyfills.StringPolyfill.Join(System.String,System.ReadOnlySpan{System.Object})">
            <summary>
            Concatenates the string representations of a span of objects, using the specified separator between each member.
            </summary>
        </member>
        <member name="M:Polyfills.StringPolyfill.Join(System.String,System.ReadOnlySpan{System.String})">
            <summary>
            Concatenates a span of strings, using the specified separator between each member.
            </summary>
        </member>
        <member name="M:Polyfills.StringPolyfill.Join(System.Char,System.String[],System.Int32,System.Int32)">
            <summary>
            Concatenates the specified elements of a string array, using the specified separator between each element.
            </summary>
        </member>
        <member name="M:Polyfills.StringPolyfill.Join``1(System.Char,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Concatenates the specified elements of a string array, using the specified separator between each element.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.ConfigurationOptions">
            <summary>
            Represents the configuration options for the builder.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ConfigurationOptions.ConfigurationSources">
            <summary>
            Gets the configuration sources options.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.ConfigurationSourcesOptions">
            <summary>
            Represents the options for configuration sources.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ConfigurationSourcesOptions.RegisterEnvironmentVariablesConfigurationSource">
            <summary>
            Gets or sets a value indicating whether to register the environment variables configuration source.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.ITestApplication">
            <summary>
            Represents an interface for a test application.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.ITestApplication.RunAsync">
            <summary>
            Runs the test application asynchronously.
            </summary>
            <returns>The exit code of the test application.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder">
            <summary>
            Represents an interface for building test applications.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.TestHost">
            <summary>
            Gets the test host manager.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.TestHostControllers">
            <summary>
            Gets the test host controllers manager.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.CommandLine">
            <summary>
            Gets the command line manager.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.RegisterTestFramework(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapabilities},System.Func{Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapabilities,System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework})">
            <summary>
            Registers a test framework with the application builder.
            </summary>
            <param name="capabilitiesFactory">The factory method for creating test framework capabilities.</param>
            <param name="adapterFactory">The factory method for creating a test framework adapter.</param>
            <returns>The updated test application builder.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.BuildAsync">
            <summary>
            Builds the test application asynchronously.
            </summary>
            <returns>A task representing the asynchronous operation. The task result is the built test application.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.TestApplication">
            <summary>
            Represents a test application.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.TestApplication.CreateServerModeBuilderAsync(System.String[],Microsoft.Testing.Platform.Builder.TestApplicationOptions)">
            <summary>
            Creates a server mode builder asynchronously.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="testApplicationOptions">The test application options.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.TestApplication.CreateBuilderAsync(System.String[],Microsoft.Testing.Platform.Builder.TestApplicationOptions)">
            <summary>
            Creates a builder asynchronously.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="testApplicationOptions">The test application options.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.TestApplication.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.TestApplication.RunAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.TestApplicationBuilder">
            <summary>
            A builder for test applications and services.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.TestApplicationOptions">
            <summary>
            Represents the options for a test application.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.TestApplicationOptions.EnableTelemetry">
            <summary>
            Gets or sets a value indicating whether telemetry is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.TestApplicationOptions.Configuration">
            <summary>
            Gets the configuration options for the test application.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.ICapabilities`1">
            <summary>
            Represents the capabilities provided by an extension.
            </summary>
            <typeparam name="TCapability">The type of capability.</typeparam>
        </member>
        <member name="P:Microsoft.Testing.Platform.Capabilities.ICapabilities`1.Capabilities">
            <summary>
            Gets the collection of capabilities.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.ICapability">
            <summary>
            Represents a capability.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.TestFramework.IBannerMessageOwnerCapability">
             <summary>
             An optional test framework capability that allows the test framework to provide the banner message to the platform.
             If the message is null or if the capability is not present, the platform will use its default banner message.
            
             This capability implementation allows to abstract away the various conditions that the test framework may need to consider
             to decide whether or not the banner message should be displayed.
             </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Capabilities.TestFramework.IBannerMessageOwnerCapability.GetBannerMessageAsync">
            <summary>
            Process the banner message and return the message to be displayed.
            </summary>
            <returns>
            The banner message to be displayed or <c>null</c> to use the default banner message.
            </returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.TestFramework.IGracefulStopTestExecutionCapability">
            <summary>
            A capability to support stopping test execution gracefully, without cancelling/aborting everything.
            This is used to support '--maximum-failed-tests'.
            </summary>
            <remarks>
            Test frameworks can choose to run any needed cleanup when cancellation is requested.
            </remarks>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapabilities">
            <summary>
            Represents the capabilities of a test framework.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities">
            <summary>
            Represents the capabilities of a test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities.#ctor(System.Collections.Generic.IReadOnlyCollection{Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapability})">
            <summary>
            Represents the capabilities of a test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities.#ctor(Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapability[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities"/> class.
            </summary>
            <param name="capabilities">The test framework capabilities.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities.Capabilities">
            <summary>
            Gets the test framework capabilities.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapability">
            <summary>
            Represents a capability for a test framework.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity">
            <summary>
            Represents the arity (minimum and maximum number of arguments) for a command line argument.
            </summary>
            <remarks>
            This is taken from https://learn.microsoft.com/dotnet/standard/commandline/syntax#argument-arity.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.#ctor(System.Int32,System.Int32)">
            <summary>
            Represents the arity (minimum and maximum number of arguments) for a command line argument.
            </summary>
            <remarks>
            This is taken from https://learn.microsoft.com/dotnet/standard/commandline/syntax#argument-arity.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Zero">
            <summary>
            Represents an argument arity of zero.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.ZeroOrOne">
            <summary>
            Represents an argument arity of zero or one.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.ZeroOrMore">
            <summary>
            Represents an argument arity of zero or more.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.OneOrMore">
            <summary>
            Represents an argument arity of one or more.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.ExactlyOne">
            <summary>
            Represents an argument arity of exactly one.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Min">
            <summary>
            Gets the minimum number of arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Max">
            <summary>
            Gets the maximum number of arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.op_Equality(Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity,Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity)">
            <summary>
            Determines whether two instances of <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> are equal.
            </summary>
            <param name="left">The first <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> to compare.</param>
            <param name="right">The second <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.op_Inequality(Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity,Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity)">
            <summary>
            Determines whether two instances of <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> are not equal.
            </summary>
            <param name="left">The first <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> to compare.</param>
            <param name="right">The second <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> to compare.</param>
            <returns><c>true</c> if the instances are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Equals(Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption">
            <summary>
            Represents a command line option.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.#ctor(System.String,System.String,Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption"/> class.
            </summary>
            <param name="name">The name of the command line option.</param>
            <param name="description">The description of the command line option.</param>
            <param name="arity">The arity of the command line option.</param>
            <param name="isHidden">Indicates whether the command line option is hidden.</param>
            <param name="isBuiltIn">Indicates whether the command line option is built-in.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.#ctor(System.String,System.String,Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption"/> class.
            </summary>
            <param name="name">The name of the command line option.</param>
            <param name="description">The description of the command line option.</param>
            <param name="arity">The arity of the command line option.</param>
            <param name="isHidden">Indicates whether the command line option is hidden.</param>
            <remarks>
            This ctor is public and used by non built-in extension, we need to know if the extension is built-in or not
            to correctly handle the --internal- prefix.
            </remarks>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Name">
            <summary>
            Gets the name of the command line option.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Description">
            <summary>
            Gets the description of the command line option.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Arity">
            <summary>
            Gets the arity of the command line option.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.IsHidden">
            <summary>
            Gets a value indicating whether the command line option is hidden.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Equals(Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider">
            <summary>
            Represents an interface for providing command line options.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider.GetCommandLineOptions">
            <summary>
            Gets the command line options provided by this extension.
            </summary>
            <returns>The collection of command line options.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider.ValidateOptionArgumentsAsync(Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption,System.String[])">
            <summary>
            Validate the arguments for the given command option.
            </summary>
            <param name="commandOption">The command option.</param>
            <param name="arguments">The arguments provided for the command option.</param>
            <returns>The result of the validation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider.ValidateCommandLineOptionsAsync(Microsoft.Testing.Platform.CommandLine.ICommandLineOptions)">
            <summary>
            Validate that the command line options are valid in the context of each other.
            </summary>
            <param name="commandLineOptions">All command line options (including the ones provided by other extensions) are provided.</param>
            <returns>The result of the validation.</returns>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.AbortForMaxFailedTestsExtension.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.AbortForMaxFailedTestsExtension.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.AbortForMaxFailedTestsExtension.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.AbortForMaxFailedTestsExtension.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.AbortForMaxFailedTestsExtension.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1">
            <summary>
            Represents a factory for creating composite extensions.
            </summary>
            <typeparam name="TExtension">The type of the extension.</typeparam>
            <remarks>
            This helper type is used to create a composite extension that is composed of multiple extensions without having to
            handle either the communication between the extensions or the lifetime of the extensions instances.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1.#ctor(System.Func{System.IServiceProvider,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1"/> class.
            </summary>
            <param name="factory">The factory function that creates the extension with a service provider.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1"/> class.
            </summary>
            <param name="factory">The factory function that creates the extension.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1.System#ICloneable#Clone">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1.Microsoft#Testing#Platform#Extensions#ICompositeExtensionFactory#GetInstance(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.IAsyncCleanableExtension">
            <summary>
            Represents an interface for asynchronously cleaning up resources.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.IAsyncCleanableExtension.CleanupAsync">
            <summary>
            Asynchronously cleans up the resources.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.IAsyncInitializableExtension">
            <summary>
            Represents an interface for asynchronously initializing an extension.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.IAsyncInitializableExtension.InitializeAsync">
            <summary>
            Asynchronously initializes the extension.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.IExtension">
            <summary>
            The interface that all extensions must implement. Extensions are a special kind of
            services that have some identity.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.IExtension.Uid">
            <summary>
            Gets the unique identifier for the extension.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.IExtension.Version">
            <summary>
            Gets the version of the extension (ideally semantic version).
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.IExtension.DisplayName">
            <summary>
            Gets the display name of the extension.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.IExtension.Description">
            <summary>
            Gets the description of the extension.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.IExtension.IsEnabledAsync">
            <summary>
            Controls whether the extension is enabled or not. This is useful for extensions
            that are always registered but only enabled when certain conditions are met.
            For example, an extension that would want to be run only when its associated
            command line option is provided by the user.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.ValidationResult">
            <summary>
            Represents the result of a validation operation.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.ValidationResult.ValidTask">
            <summary>
            Gets a task that represents a valid validation result.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.ValidationResult.IsValid">
            <summary>
            Gets a value indicating whether the validation result is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.ValidationResult.ErrorMessage">
            <summary>
            Gets the error message associated with an invalid validation result.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.ValidationResult.Valid">
            <summary>
            Creates a valid validation result.
            </summary>
            <returns>A valid validation result.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.ValidationResult.Invalid(System.String)">
            <summary>
            Creates an invalid validation result with the specified error message.
            </summary>
            <param name="errorMessage">The error message.</param>
            <returns>An invalid validation result.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.ValidationResult.InvalidTask(System.String)">
            <summary>
            Creates a task that represents an invalid validation result with the specified error message.
            </summary>
            <param name="errorMessage">The error message.</param>
            <returns>A task that represents an invalid validation result.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid">
            <summary>
            Represents data with a session UID.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid.#ctor(System.String,System.String,Microsoft.Testing.Platform.TestHost.SessionUid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid"/> class.
            </summary>
            <param name="displayName">The display name of the data.</param>
            <param name="description">The description of the data.</param>
            <param name="sessionUid">The session UID.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid.SessionUid">
            <summary>
            Gets the session UID.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact">
            <summary>
            Represents a file artifact.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact.#ctor(System.IO.FileInfo,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact"/> class.
            </summary>
            <param name="fileInfo">The file information.</param>
            <param name="displayName">The display name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact.FileInfo">
            <summary>
            Gets the file information.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact">
            <summary>
            Represents a session file artifact.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact.#ctor(Microsoft.Testing.Platform.TestHost.SessionUid,System.IO.FileInfo,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact"/> class.
            </summary>
            <param name="sessionUid">The session UID.</param>
            <param name="fileInfo">The file information.</param>
            <param name="displayName">The display name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact.FileInfo">
            <summary>
            Gets the file information.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact">
            <summary>
            Represents a test node file artifact.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.#ctor(Microsoft.Testing.Platform.TestHost.SessionUid,Microsoft.Testing.Platform.Extensions.Messages.TestNode,System.IO.FileInfo,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact"/> class.
            </summary>
            <param name="sessionUid">The session UID.</param>
            <param name="testNode">The test node.</param>
            <param name="fileInfo">The file information.</param>
            <param name="displayName">The display name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.TestNode">
            <summary>
            Gets the test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.IData">
            <summary>
            Represents the data interface.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.IData.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.IData.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.IDataProducer">
            <summary>
            Represents a data producer extension.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.IDataProducer.DataTypesProduced">
            <summary>
            Gets the types of data produced by the data producer.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.IProperty">
            <summary>
            The interface that every test node property must implement.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty">
            <summary>
            Node property that represents a key-value pair.
            </summary>
            <param name="Key">Key name.</param>
            <param name="Value">Key value.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.#ctor(System.String,System.String)">
            <summary>
            Node property that represents a key-value pair.
            </summary>
            <param name="Key">Key name.</param>
            <param name="Value">Key value.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.Key">
            <summary>Key name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.Value">
            <summary>Key value.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty">
            <summary>
            Base class for test node state properties.
            </summary>
            <param name="Explanation">Textual explanation of the node state.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.#ctor(System.String)">
            <summary>
            Base class for test node state properties.
            </summary>
            <param name="Explanation">Textual explanation of the node state.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.Explanation">
            <summary>Textual explanation of the node state.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty">
            <summary>
            Property that represents test node that has been discovered.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Property that represents test node that has been discovered.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty.CachedInstance">
            <summary>
            Gets cached instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty">
            <summary>
            Property that represents a test node that is being executed.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Property that represents a test node that is being executed.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty.CachedInstance">
            <summary>
            Gets cached instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.PassedTestNodeStateProperty">
            <summary>
            Property that represents a test node that has been executed and passed.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.PassedTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Property that represents a test node that has been executed and passed.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.SkippedTestNodeStateProperty">
            <summary>
            Property that represents a test node that has been skipped.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.SkippedTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Property that represents a test node that has been skipped.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty">
            <summary>
            Property that represents a test node that has been failed.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty"/> class.
            </summary>
            <param name="explanation">Failure explanation.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty"/> class.
            </summary>
            <param name="exception">Failure exception.</param>
            <param name="explanation">Failure explanation.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty.Exception">
            <summary>
            Gets the failure exception.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty">
            <summary>
            Property that represents an eventual error in the test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty"/> class.
            </summary>
            <param name="explanation">Error explanation.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty"/> class.
            </summary>
            <param name="exception">Error exception.</param>
            <param name="explanation">Error explanation.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty.Exception">
            <summary>
            Gets the error exception.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty">
            <summary>
            Property that represents an eventual timeout in the test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty"/> class.
            </summary>
            <param name="explanation">Timeout explanation.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty"/> class.
            </summary>
            <param name="exception">Timeout exception.</param>
            <param name="explanation">Timeout explanation.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.Exception">
            <summary>
            Gets get the timeout exception.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.Timeout">
            <summary>
            Gets get the timeout Timespan.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty">
            <summary>
            Property that represents an eventual cancellation of a test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty"/> class.
            </summary>
            <param name="explanation">Cancellation explanation.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty"/> class.
            </summary>
            <param name="exception">Cancellation exception.</param>
            <param name="explanation">Cancellation explanation.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty.Exception">
            <summary>
            Gets the cancellation exception.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo">
            <summary>
            Information about the timing of a test node.
            </summary>
            <param name="StartTime">Test start time.</param>
            <param name="EndTime">Test end time.</param>
            <param name="Duration">Total test duration.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.#ctor(System.DateTimeOffset,System.DateTimeOffset,System.TimeSpan)">
            <summary>
            Information about the timing of a test node.
            </summary>
            <param name="StartTime">Test start time.</param>
            <param name="EndTime">Test end time.</param>
            <param name="Duration">Total test duration.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.StartTime">
            <summary>Test start time.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.EndTime">
            <summary>Test end time.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.Duration">
            <summary>Total test duration.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo">
            <summary>
            Information about the timing of a test node step.
            </summary>
            <param name="Id">Step identifier.</param>
            <param name="Description">Step description.</param>
            <param name="Timing">Step timing info.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.#ctor(System.String,System.String,Microsoft.Testing.Platform.Extensions.Messages.TimingInfo)">
            <summary>
            Information about the timing of a test node step.
            </summary>
            <param name="Id">Step identifier.</param>
            <param name="Description">Step description.</param>
            <param name="Timing">Step timing info.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Id">
            <summary>Step identifier.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Description">
            <summary>Step description.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Timing">
            <summary>Step timing info.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty">
            <summary>
            Property that represents the timing of a test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty.#ctor(Microsoft.Testing.Platform.Extensions.Messages.TimingInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty"/> class.
            </summary>
            <param name="globalTiming">Timing info.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty.#ctor(Microsoft.Testing.Platform.Extensions.Messages.TimingInfo,Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty"/> class.
            </summary>
            <param name="globalTiming">Timing info.</param>
            <param name="stepTimings">Steps timing.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty.GlobalTiming">
            <summary>
            Gets the global timing info.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty.StepTimings">
            <summary>
            Gets the steps timing info.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.LinePosition">
            <summary>
            Line position in a file.
            </summary>
            <param name="Line">Line number.</param>
            <param name="Column">Column number.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.LinePosition.#ctor(System.Int32,System.Int32)">
            <summary>
            Line position in a file.
            </summary>
            <param name="Line">Line number.</param>
            <param name="Column">Column number.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.LinePosition.Line">
            <summary>Line number.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.LinePosition.Column">
            <summary>Column number.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan">
            <summary>
            Line position span in a file.
            </summary>
            <param name="Start">Start line position.</param>
            <param name="End">End line position.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.#ctor(Microsoft.Testing.Platform.Extensions.Messages.LinePosition,Microsoft.Testing.Platform.Extensions.Messages.LinePosition)">
            <summary>
            Line position span in a file.
            </summary>
            <param name="Start">Start line position.</param>
            <param name="End">End line position.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.Start">
            <summary>Start line position.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.End">
            <summary>End line position.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty">
            <summary>
            Base property that represents a file location.
            </summary>
            <param name="FilePath">File path.</param>
            <param name="LineSpan">Line position.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.#ctor(System.String,Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan)">
            <summary>
            Base property that represents a file location.
            </summary>
            <param name="FilePath">File path.</param>
            <param name="LineSpan">Line position.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.FilePath">
            <summary>File path.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.LineSpan">
            <summary>Line position.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestFileLocationProperty">
            <summary>
            Property that represents a file location for a test node.
            </summary>
            <param name="FilePath">File path.</param>
            <param name="LineSpan">Line position.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestFileLocationProperty.#ctor(System.String,Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan)">
            <summary>
            Property that represents a file location for a test node.
            </summary>
            <param name="FilePath">File path.</param>
            <param name="LineSpan">Line position.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty">
            <summary>
            Property that uniquely identifies a test method. Values are ECMA-335 compliant.
            </summary>
            <param name="AssemblyFullName">Assembly full name.</param>
            <param name="Namespace">Namespace.</param>
            <param name="TypeName">Type name.</param>
            <param name="MethodName">Method name.</param>
            <param name="ParameterTypeFullNames">Parameter type full name.</param>
            <param name="ReturnTypeFullName">Return type full name.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.#ctor(System.String,System.String,System.String,System.String,System.String[],System.String)">
            <summary>
            Property that uniquely identifies a test method. Values are ECMA-335 compliant.
            </summary>
            <param name="AssemblyFullName">Assembly full name.</param>
            <param name="Namespace">Namespace.</param>
            <param name="TypeName">Type name.</param>
            <param name="MethodName">Method name.</param>
            <param name="ParameterTypeFullNames">Parameter type full name.</param>
            <param name="ReturnTypeFullName">Return type full name.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.AssemblyFullName">
            <summary>Assembly full name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.Namespace">
            <summary>Namespace.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.TypeName">
            <summary>Type name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.MethodName">
            <summary>Method name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.ParameterTypeFullNames">
            <summary>Parameter type full name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.ReturnTypeFullName">
            <summary>Return type full name.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty"/> class.
            Property that represents a generic test metadata property in the shape of a key-value pair associated with a <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNode"/>.
            </summary>
            <param name="Key">The metadata key.</param>
            <param name="Value">The metadata value.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty"/> class.
            Property that represents a generic test metadata property in the shape of a key-value pair associated with a <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNode"/>.
            </summary>
            <param name="Key">The metadata key.</param>
            <param name="Value">The metadata value.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.Key">
            <summary>The metadata key.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.Value">
            <summary>The metadata value.</summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty"/> class.
            Property that represents a generic test metadata property in the shape of a value associated with a <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNode"/>.
            </summary>
            <param name="key">The metadata key.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty">
            <summary>
            Property that represents standard output to associate with a test node.
            </summary>
            <param name="StandardOutput">The standard output.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.#ctor(System.String)">
            <summary>
            Property that represents standard output to associate with a test node.
            </summary>
            <param name="StandardOutput">The standard output.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.StandardOutput">
            <summary>The standard output.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty">
            <summary>
            Property that represents standard error to associate with a test node.
            </summary>
            <param name="StandardError">The standard error.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.#ctor(System.String)">
            <summary>
            Property that represents standard error to associate with a test node.
            </summary>
            <param name="StandardError">The standard error.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.StandardError">
            <summary>The standard error.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer">
            <summary>
            Represents a data consumer that can consume data produced by a data producer.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer.DataTypesConsumed">
            <summary>
            Gets the types of data consumed by the data consumer.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer.ConsumeAsync(Microsoft.Testing.Platform.Extensions.Messages.IDataProducer,Microsoft.Testing.Platform.Extensions.Messages.IData,System.Threading.CancellationToken)">
            <summary>
            Consumes the specified data produced by a data producer.
            </summary>
            <param name="dataProducer">The data producer.</param>
            <param name="value">The data to be consumed.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks">
            <summary>
            Represents the interface for test application lifecycle callbacks.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks.BeforeRunAsync(System.Threading.CancellationToken)">
            <summary>
            Executes before the test run.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks.AfterRunAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Executes after the test run.
            </summary>
            <param name="exitCode">The exit code of the test run.</param>
            <param name="cancellation">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHost.ITestHostExtension">
            <summary>
            Represents a test host specialized extension.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler">
            <summary>
            Represents an interface for handling the lifetime of a test session.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler.OnTestSessionStartingAsync(Microsoft.Testing.Platform.TestHost.SessionUid,System.Threading.CancellationToken)">
            <summary>
            Called when a test session is starting.
            </summary>
            <param name="sessionUid">The unique identifier of the session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler.OnTestSessionFinishingAsync(Microsoft.Testing.Platform.TestHost.SessionUid,System.Threading.CancellationToken)">
            <summary>
            Called when a test session is finishing.
            </summary>
            <param name="sessionUid">The unique identifier of the session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.OutputDevice.IOutputDeviceDataProducer">
            <summary>
            Represents a producer of data that will be directed to the output device.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionContext">
            <summary>
            Context passed to a test framework adapter when <see cref="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.CloseTestSessionAsync(Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionContext)"/> is called.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionContext.CancellationToken">
            <summary>
            Gets the cancellation token used to cancel the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionResult">
            <summary>
            Represents the result of closing a test session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionResult.WarningMessage">
            <summary>
            Gets or sets the warning message associated with the test session closing.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionResult.ErrorMessage">
            <summary>
            Gets or sets the error message associated with the test session closing.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionResult.IsSuccess">
            <summary>
            Gets or sets a value indicating whether the test session closing was successful.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionContext">
            <summary>
            Context passed to a test framework adapter when <see cref="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.CreateTestSessionAsync(Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionContext)"/> is called.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionContext.CancellationToken">
            <summary>
            Gets the cancellation token used to cancel the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionResult">
            <summary>
            Represents the result of creating a test session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionResult.WarningMessage">
            <summary>
            Gets or sets the warning message, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionResult.ErrorMessage">
            <summary>
            Gets or sets the error message, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionResult.IsSuccess">
            <summary>
            Gets or sets a value indicating whether the test session creation was successful.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext">
            <summary>
            This class represents the context that is passed to a test framework adapter when the <see cref="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.ExecuteRequestAsync(Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext)"/> method is called.
            </summary>
            <remarks>
            It contains information about the request, message bus, semaphore, and cancellation token.
            </remarks>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext.Request">
            <summary>
            Gets the request associated with the execution.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext.MessageBus">
            <summary>
            Gets the message bus used for reporting test execution events.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext.CancellationToken">
            <summary>
            Gets the cancellation token that can be used to cancel the execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext.Complete">
            <summary>
            Completes the execution request.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework">
            <summary>
            A specialized extension that represents a test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.CreateTestSessionAsync(Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionContext)">
            <summary>
            Ask to the test framework to create a test session.
            </summary>
            <param name="context">The test session creation context.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.ExecuteRequestAsync(Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext)">
            <summary>
            Ask to the test framework to execute a test execution request.
            </summary>
            <param name="context">The test execution request context.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.CloseTestSessionAsync(Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionContext)">
            <summary>
            Ask to the test framework to destroy the test session and release all the resources.
            </summary>
            <param name="context">The test session destruction context.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable">
            <summary>
            Represents an environment variable.
            </summary>
            <param name="variable">The name of the environment variable.</param>
            <param name="value">The value of the environment variable.</param>
            <param name="isSecret">Indicates whether the environment variable is a secret.</param>
            <param name="isLocked">Indicates whether the environment variable is locked.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Represents an environment variable.
            </summary>
            <param name="variable">The name of the environment variable.</param>
            <param name="value">The value of the environment variable.</param>
            <param name="isSecret">Indicates whether the environment variable is a secret.</param>
            <param name="isLocked">Indicates whether the environment variable is locked.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.Variable">
            <summary>
            Gets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.Value">
            <summary>
            Gets the value of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.IsSecret">
            <summary>
            Gets a value indicating whether the environment variable is a secret.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.IsLocked">
            <summary>
            Gets a value indicating whether the environment variable is locked.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.IEnvironmentVariables">
            <summary>
            Represents an interface for managing environment variables.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.IEnvironmentVariables.SetVariable(Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable)">
            <summary>
            Sets the value of the specified environment variable.
            </summary>
            <param name="environmentVariable">The environment variable to set.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.IEnvironmentVariables.RemoveVariable(System.String)">
            <summary>
            Removes the specified environment variable.
            </summary>
            <param name="variable">The name of the environment variable to remove.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.IReadOnlyEnvironmentVariables">
            <summary>
            Represents an interface for reading environment variables.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.IReadOnlyEnvironmentVariables.TryGetVariable(System.String,Microsoft.Testing.Platform.Extensions.TestHostControllers.OwnedEnvironmentVariable@)">
            <summary>
            Tries to get the value of the specified environment variable.
            </summary>
            <param name="variable">The name of the environment variable.</param>
            <param name="environmentVariable">When this method returns, contains the value of the environment variable, if it is found; otherwise, null.</param>
            <returns>true if the environment variable is found; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostControllersExtension">
            <summary>
            Represents an extension for test host controllers.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostEnvironmentVariableProvider">
            <summary>
            Represents an interface for providing environment variables to the test host.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostEnvironmentVariableProvider.UpdateAsync(Microsoft.Testing.Platform.Extensions.TestHostControllers.IEnvironmentVariables)">
            <summary>
            Updates the environment variables for the test host asynchronously.
            </summary>
            <param name="environmentVariables">The environment variables to update.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostEnvironmentVariableProvider.ValidateTestHostEnvironmentVariablesAsync(Microsoft.Testing.Platform.Extensions.TestHostControllers.IReadOnlyEnvironmentVariables)">
            <summary>
            Validates the test host environment variables asynchronously.
            </summary>
            <param name="environmentVariables">The environment variables to validate.</param>
            <returns>A task representing the asynchronous operation and containing the validation result.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation">
            <summary>
            Represents information about a test host process.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation.PID">
            <summary>
            Gets the process ID of the test host.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation.ExitCode">
            <summary>
            Gets the exit code of the test host process.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation.HasExitedGracefully">
            <summary>
            Gets a value indicating whether the test host process has exited gracefully.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler">
            <summary>
            Represents an interface for handling the lifetime of the test host process.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler.BeforeTestHostProcessStartAsync(System.Threading.CancellationToken)">
            <summary>
            Executes before the test host process starts.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler.OnTestHostProcessStartedAsync(Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation,System.Threading.CancellationToken)">
            <summary>
            Executes when the test host process has started.
            </summary>
            <param name="testHostProcessInformation">Information about the test host process.</param>
            <param name="cancellation">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler.OnTestHostProcessExitedAsync(Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation,System.Threading.CancellationToken)">
            <summary>
            Executes when the test host process has exited.
            </summary>
            <param name="testHostProcessInformation">Information about the test host process.</param>
            <param name="cancellation">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.OwnedEnvironmentVariable">
            <summary>
            Represents an owned environment variable.
            </summary>
            <remarks>
            This class extends the <see cref="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable"/> class and adds an owner property.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.OwnedEnvironmentVariable.#ctor(Microsoft.Testing.Platform.Extensions.IExtension,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Represents an owned environment variable.
            </summary>
            <remarks>
            This class extends the <see cref="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable"/> class and adds an owner property.
            </remarks>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.OwnedEnvironmentVariable.Owner">
            <summary>
            Gets the owner of the environment variable.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.CommandLine.ICommandLineManager">
            <summary>
            Represents a command line manager.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.ICommandLineManager.AddProvider(System.Func{Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider})">
            <summary>
            Adds a command line options provider.
            </summary>
            <param name="commandLineProviderFactory">The factory method for creating the command line options provider.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.ICommandLineManager.AddProvider(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider})">
            <summary>
            Adds a command line options provider.
            </summary>
            <param name="commandLineProviderFactory">The factory method for creating the command line options provider, given a service provider.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.CommandLine.ICommandLineOptions">
            <summary>
            Represents the interface for command line options.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.ICommandLineOptions.IsOptionSet(System.String)">
            <summary>
            Checks if the specified option is set.
            </summary>
            <param name="optionName">The name of the option.</param>
            <returns>True if the option is set; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.ICommandLineOptions.TryGetOptionArgumentList(System.String,System.String[]@)">
            <summary>
            Tries to get the argument list for the specified option.
            </summary>
            <param name="optionName">The name of the option.</param>
            <param name="arguments">The argument list for the option, if found.</param>
            <returns>True if the argument list is found; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.CommandLineParser.Parse(System.String[],Microsoft.Testing.Platform.Helpers.IEnvironment)">
             <summary>
             Options parser support:
                 * Only - and -- prefix for options https://learn.microsoft.com/dotnet/standard/commandline/syntax#options
                 * Multiple option arguments https://learn.microsoft.com/dotnet/standard/commandline/syntax#multiple-arguments
                 * Use a space, '=', or ':' as the delimiter between an option name and its argument
                 * escape with \
                 * surrounding with ""
                 * surrounding with ''
            
             Options parser doesn't support
                 * Default argument/commands/verb
                 * Alias https://learn.microsoft.com/dotnet/standard/commandline/syntax#aliases
                 * Case sensitivity https://learn.microsoft.com/dotnet/standard/commandline/syntax#case-sensitivity
                 * -- token https://learn.microsoft.com/dotnet/standard/commandline/syntax#the----token
            
             https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_02_03
             https://learn.microsoft.com/cpp/c-language/parsing-c-command-line-arguments?view=msvc-170
             Double-Quotes: we don't support for now
                 * The dollar-sign shall retain its special meaning introducing parameter expansion
                 * The backquote shall retain its special meaning introducing the other form of command substitution
                 * A POSIX convention lets you omit the delimiter when you are specifying a single-character option alias, i.e. myapp -vquiet.
             </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Configurations.ConfigurationExtensions">
            <summary>
            Provides extension methods for the IConfiguration interface.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Configurations.ConfigurationExtensions.GetTestResultDirectory(Microsoft.Testing.Platform.Configurations.IConfiguration)">
            <summary>
            Gets the test result directory from the configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The test result directory.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Configurations.ConfigurationExtensions.GetCurrentWorkingDirectory(Microsoft.Testing.Platform.Configurations.IConfiguration)">
            <summary>
            Gets the current working directory from the configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The current working directory.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Configurations.ConfigurationExtensions.GetTestHostWorkingDirectory(Microsoft.Testing.Platform.Configurations.IConfiguration)">
            <summary>
            Gets the test host working directory from the configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The test host working directory.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Configurations.IConfiguration">
            <summary>
            Represents a configuration interface.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.IConfiguration.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Configurations.JsonConfigurationFileParser">
            <summary>
            Taken and adapted from https://github.com/dotnet/runtime/blob/main/src/libraries/Microsoft.Extensions.Configuration.Json/src/JsonConfigurationFileParser.cs
            We added also the _propertyToAllChildren dictionary to keep the whole json structure because we don't support by default the serialization/deserialization
            and we need to keep the whole json structure per json property to be able to easily serialize it to some other format.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Helpers.ExitCodes">
            <summary>
            We use positive exit codes for failure because POSIX/BASH exit codes are unsigned 8-bit integers.
            On POSIX systems the standard exit code is 0 for success and any number from 1 to 255 for anything else.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Helpers.ObjectPool`1">
             <summary>
             Generic implementation of object pooling pattern with predefined pool size limit. The main
             purpose is that limited number of frequently used objects can be kept in the pool for
             further recycling.
            
             Notes:
             1) it is not the goal to keep all returned objects. Pool is not meant for storage. If there
                is no space in the pool, extra returned objects will be dropped.
            
             2) it is implied that if object was obtained from a pool, the caller will return it back in
                a relatively short time. Keeping checked out objects for long durations is ok, but
                reduces usefulness of pooling. Just new up your own.
            
             Not returning objects to the pool in not detrimental to the pool's work, but is a bad practice.
             Rationale:
                If there is no intent for reusing the object, do not use pool - just use "new".
             </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Helpers.ObjectPool`1.Factory">
            <remarks>
            Not using System.Func{T} because this file is linked into the (debugger) Formatter,
            which does not have that type (since it compiles against .NET 2.0).
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.ObjectPool`1.Allocate">
            <summary>
            Produces an instance.
            </summary>
            <remarks>
            Search strategy is a simple linear probing which is chosen for it cache-friendliness.
            Note that Free will try to store recycled objects close to the start thus statistically
            reducing how far we will typically search.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.ObjectPool`1.Free(`0,System.Threading.CancellationToken)">
            <summary>
            Returns objects to the pool.
            </summary>
            <remarks>
            Search strategy is a simple linear probing which is chosen for it cache-friendliness.
            Note that Free will try to store recycled objects close to the start thus statistically
            reducing how far we will typically search in Allocate.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.ObjectPool`1.ForgetTrackedObject(`0,`0)">
             <summary>
             Removes an object from leak tracking.
            
             This is called when an object is returned to the pool.  It may also be explicitly
             called if an object allocated from the pool is intentionally not being returned
             to the pool.  This can be of use with pooled arrays if the consumer wants to
             return a larger array to the pool than was originally allocated.
             </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Helpers.IConsole">
            <summary>
            Wraps the static System.Console to be isolatable in tests.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.IProcess.Id">
            <inheritdoc cref="P:System.Diagnostics.Process.Id" />
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.IProcess.ExitCode">
            <inheritdoc cref="P:System.Diagnostics.Process.ExitCode" />
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.IProcess.HasExited">
            <inheritdoc cref="P:System.Diagnostics.Process.HasExited" />
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.IProcess.MainModule">
            <inheritdoc cref="P:System.Diagnostics.Process.MainModule" />
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.IProcess.WaitForExitAsync">
            <summary>
            Instructs the Process component to wait for the associated process to exit, or for the cancellationToken to be canceled.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.IProcess.WaitForExit">
            <inheritdoc cref="M:System.Diagnostics.Process.WaitForExit" />
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.IProcess.Kill">
            <inheritdoc cref="M:System.Diagnostics.Process.Kill" />
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.SystemConsole.BufferHeight">
            <summary>
            Gets the height of the buffer area.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.SystemConsole.BufferWidth">
            <summary>
            Gets the width of the buffer area.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.SystemConsole.IsOutputRedirected">
            <summary>
            Gets a value indicating whether output has been redirected from the standard output stream.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.TestApplicationBuilderExtensions.AddMaximumFailedTestsService(Microsoft.Testing.Platform.Builder.ITestApplicationBuilder,Microsoft.Testing.Platform.Extensions.IExtension)">
            <summary>
            Registers the command-line options provider for '--maximum-failed-tests'.
            </summary>
            <param name="builder">The test application builder.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.TimeoutHelper.DefaultHangTimeoutMilliseconds">
            <summary>
            Gets defaultAntiHangTimeout* values are used as timeout for every wait operation in the test platform.
            Are not intended for any timeout logic, but only to avoid infinite waits in case of test platform hangs.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.TimeSpanParser.GetRegex">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ "value" capture group.<br/>
                ○ Match if at the beginning of the string.<br/>
                ○ Match a Unicode digit greedily at least once.<br/>
                ○ Optional (greedy).<br/>
                    ○ Match '.'.<br/>
                    ○ Match a Unicode digit atomically at least once.<br/>
            ○ Match a whitespace character greedily any number of times.<br/>
            ○ "suffix" capture group.<br/>
                ○ Match with 4 alternative expressions.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Mm].<br/>
                        ○ Match a character in the set [Ss].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Mm].<br/>
                        ○ Match a character in the set [Ii].<br/>
                        ○ Match a character in the set [Ll].<br/>
                    ○ Match a character in the set [DHMdhm].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Ss] greedily, optionally.<br/>
                        ○ Match a character in the set [A-Za-z\u212A] atomically any number of times.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.RoslynDebug.Assert(System.Boolean)">
            <inheritdoc cref="M:System.Diagnostics.Debug.Assert(System.Boolean)"/>
        </member>
        <member name="M:Microsoft.Testing.Platform.RoslynDebug.Assert(System.Boolean,System.String)">
            <inheritdoc cref="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)"/>
        </member>
        <member name="M:Microsoft.Testing.Platform.RoslynString.IsNullOrEmpty(System.String)">
            <inheritdoc cref="M:System.String.IsNullOrEmpty(System.String)"/>
        </member>
        <member name="M:Microsoft.Testing.Platform.RoslynString.IsNullOrWhiteSpace(System.String)">
            <inheritdoc cref="M:System.String.IsNullOrWhiteSpace(System.String)"/>
        </member>
        <member name="M:Microsoft.Testing.Platform.Hosts.ServerTestHost.HandleMessagesAsync">
            <summary>
            The main server loop.
            It receives messages from the client and then runs a corresponding handler.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ServerTestHost.RpcInvocationState.CompletionSource">
            <remarks>
            For outbound requests, this is populated with the response from the client.
            For inbound requests, this is set when the invoked request is completed
            in <see cref="M:Microsoft.Testing.Platform.Hosts.ServerTestHost.HandleRequestAsync(Microsoft.Testing.Platform.ServerMode.RequestMessage,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Testing.Platform.Hosts.ServerTestHost.TestNodeStateChangeAggregator">
             <summary>
             Aggregates multiple <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeUpdateMessage"/> events
             into a single <see cref="T:Microsoft.Testing.Platform.ServerMode.TestNodeStateChangedEventArgs"/>.
            
             This is done to minimize the number of RPC messages sent.
             </summary>
             <remarks>The caller needs to ensure thread-safety.</remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Hosts.ServerTestHost.TestNodeStateChangeAggregator.#ctor(System.Guid)">
             <summary>
             Aggregates multiple <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeUpdateMessage"/> events
             into a single <see cref="T:Microsoft.Testing.Platform.ServerMode.TestNodeStateChangedEventArgs"/>.
            
             This is done to minimize the number of RPC messages sent.
             </summary>
             <remarks>The caller needs to ensure thread-safety.</remarks>
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ToolsTestHost.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ToolsTestHost.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ToolsTestHost.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ToolsTestHost.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Hosts.ToolsTestHost.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.IPC.NamedPipeServer.InternalLoopAsync(System.Threading.CancellationToken)">
            <summary>
            4 bytes = message size
            ------- Payload -------
            4 bytes = serializer id
            x bytes = object buffer.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.ILogger">
            <summary>
            Represents a logger that can be used for logging messages.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.ILogger.LogAsync``1(Microsoft.Testing.Platform.Logging.LogLevel,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Asynchronously logs a message with the specified log level, state, exception, and formatter.
            </summary>
            <typeparam name="TState">The type of the state object.</typeparam>
            <param name="logLevel">The log level of the message.</param>
            <param name="state">The state object.</param>
            <param name="exception">The exception associated with the message.</param>
            <param name="formatter">The formatter function to format the message.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.ILogger.Log``1(Microsoft.Testing.Platform.Logging.LogLevel,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Logs a message with the specified log level, state, exception, and formatter.
            </summary>
            <typeparam name="TState">The type of the state object.</typeparam>
            <param name="logLevel">The log level of the message.</param>
            <param name="state">The state object.</param>
            <param name="exception">The exception associated with the message.</param>
            <param name="formatter">The formatter function to format the message.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.ILogger.IsEnabled(Microsoft.Testing.Platform.Logging.LogLevel)">
            <summary>
            Checks if the logger is enabled for the specified log level.
            </summary>
            <param name="logLevel">The log level to check.</param>
            <returns>True if the logger is enabled for the specified log level, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.ILogger`1">
            <summary>
            Represents a logger that can be used for logging messages with a specific category.
            </summary>
            <typeparam name="TCategoryName">The type of the category name.</typeparam>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.ILoggerFactory">
            <summary>
            Represents a factory for creating loggers.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.ILoggerFactory.CreateLogger(System.String)">
            <summary>
            Creates a logger with the specified category name.
            </summary>
            <param name="categoryName">The name of the category for the logger.</param>
            <returns>A new instance of the logger.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.LoggerFactoryExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Testing.Platform.Logging.ILoggerFactory"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Testing.Platform.Logging.ILoggerFactory)">
            <summary>
            Creates a logger instance for the specified category name.
            </summary>
            <typeparam name="TCategoryName">The type of the category name.</typeparam>
            <param name="factory">The logger factory.</param>
            <returns>A logger instance.</returns>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Trace">
            <summary>
            Logs that contain the most detailed messages.
            These messages may contain sensitive application data. These messages are disabled by default and should never be enabled in a production environment.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Debug">
            <summary>
            Logs that are used for interactive investigation during development.
            These logs should primarily contain information useful for debugging and have no long-term value.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Information">
            <summary>
            Logs that track the general flow of the application.
            These logs should have long-term value.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Warning">
            <summary>
            Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Error">
            <summary>
            Logs that highlight when the current flow of execution is stopped due to a failure.
            These should indicate a failure in the current activity, not an application-wide failure.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Critical">
            <summary>
            Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires immediate attention.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.None">
            <summary>
            Not used for writing log messages. Specifies that a logging category should not write any messages.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.TypeNameHelper">
            <summary>
            Borrowed from https://github.com/dotnet/runtime/blob/main/src/libraries/Common/src/Extensions/TypeNameHelper/TypeNameHelper.cs.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.TypeNameHelper.GetTypeDisplayName(System.Type,System.Boolean,System.Boolean,System.Boolean,System.Char)">
            <summary>
            Pretty print a type name.
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <param name="fullName"><c>true</c> to print a fully qualified name.</param>
            <param name="includeGenericParameterNames"><c>true</c> to include generic parameter names.</param>
            <param name="includeGenericParameters"><c>true</c> to include generic parameters.</param>
            <param name="nestedTypeDelimiter">Character to use as a delimiter in nested type names.</param>
            <returns>The pretty printed type name.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Messages.IMessageBus">
            <summary>
            Represents a message bus for publishing data.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Messages.IMessageBus.PublishAsync(Microsoft.Testing.Platform.Extensions.Messages.IDataProducer,Microsoft.Testing.Platform.Extensions.Messages.IData)">
            <summary>
            Publishes the specified data using the provided data producer.
            </summary>
            <param name="dataProducer">The data producer.</param>
            <param name="data">The data to be published.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics">
            <summary>
            Represents the test outcome and its retry execution statistics.
            </summary>
            <param name="HasPassed"> The test's single outcome or its final outcome. </param>
            <param name="TotalPassedRetries"> The number of times the adapter reported a Passed outcome when retrying. </param>
            <param name="TotalFailedRetries"> The number of times the adapter reported a Failed outcome when retrying. </param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics.#ctor(System.Boolean,System.Int64,System.Int64)">
            <summary>
            Represents the test outcome and its retry execution statistics.
            </summary>
            <param name="HasPassed"> The test's single outcome or its final outcome. </param>
            <param name="TotalPassedRetries"> The number of times the adapter reported a Passed outcome when retrying. </param>
            <param name="TotalFailedRetries"> The number of times the adapter reported a Failed outcome when retrying. </param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics.HasPassed">
            <summary> The test's single outcome or its final outcome. </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics.TotalPassedRetries">
            <summary> The number of times the adapter reported a Passed outcome when retrying. </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics.TotalFailedRetries">
            <summary> The number of times the adapter reported a Failed outcome when retrying. </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData">
            <summary>
            Represents the data for a formatted text output device.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData"/> class with the specified text.
            </summary>
            <param name="text">The text to be displayed.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData.ForegroundColor">
            <summary>
            Gets or inits the foreground color of the text.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData.BackgroundColor">
            <summary>
            Gets or inits the background color of the text.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData.Padding">
            <summary>
            Gets or inits the padding of the message.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.IColor">
            <summary>
            Represents a color.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.IOutputDevice">
            <summary>
            Represents an output device.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.IOutputDevice.DisplayAsync(Microsoft.Testing.Platform.Extensions.OutputDevice.IOutputDeviceDataProducer,Microsoft.Testing.Platform.OutputDevice.IOutputDeviceData)">
            <summary>
            Displays the output data asynchronously.
            </summary>
            <param name="producer">The data producer.</param>
            <param name="data">The output data.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.IOutputDeviceData">
            <summary>
            Represents the data for an output device.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.SystemConsoleColor">
            <summary>
            Represents a system console color.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.SystemConsoleColor.ConsoleColor">
            <summary>
            Gets or inits the console color.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.TerminalOutputDevice">
            <summary>
            Implementation of output device that writes to terminal with progress and optionally with ANSI.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.TerminalOutputDevice.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.TerminalOutputDevice.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.TerminalOutputDevice.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.TerminalOutputDevice.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.TerminalOutputDevice.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.TerminalOutputDevice.DisplayAsync(Microsoft.Testing.Platform.Extensions.OutputDevice.IOutputDeviceDataProducer,Microsoft.Testing.Platform.OutputDevice.IOutputDeviceData)">
            <summary>
            Displays provided data through IConsole, which is typically System.Console.
            </summary>
            <param name="producer">The producer that sent the data.</param>
            <param name="data">The data to be displayed.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes">
            <summary>
            A collection of standard ANSI/VT100 control codes.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.Esc">
            <summary>
             Escape character.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.CSI">
            <summary>
            The control sequence introducer.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.SetColor">
            <summary>
            Select graphic rendition.
            </summary>
            <remarks>
            Print <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.CSI"/>color-code<see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.SetColor"/> to change text color.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.SetBold">
            <summary>
            Select graphic rendition - set bold mode.
            </summary>
            <remarks>
            Print <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.CSI"/><see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.SetBold"/> to change text to bold.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.SetDefaultColor">
            <summary>
            A shortcut to reset color back to normal.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.LinkPrefix">
            <summary>
            Non-xterm extension to render a hyperlink.
            </summary>
            <remarks>
            Print <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.LinkPrefix"/>url<see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.LinkInfix"/>text<see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.LinkSuffix"/> to render a hyperlink.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.LinkInfix">
            <summary>
            <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.LinkPrefix"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.LinkSuffix">
            <summary>
            <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.LinkPrefix"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.MoveUpToLineStart">
            <summary>
            Moves up the specified number of lines and puts cursor at the beginning of the line.
            </summary>
            <remarks>
            Print <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.CSI"/>N<see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.MoveUpToLineStart"/> to move N lines up.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.MoveForward">
            <summary>
            Moves forward (to the right) the specified number of characters.
            </summary>
            <remarks>
            Print <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.CSI"/>N<see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.MoveForward"/> to move N characters forward.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.MoveBackward">
            <summary>
            Moves backward (to the left) the specified number of characters.
            </summary>
            <remarks>
            Print <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.CSI"/>N<see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.MoveBackward"/> to move N characters backward.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.EraseInDisplay">
            <summary>
            Clears everything from cursor to end of screen.
            </summary>
            <remarks>
            Print <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.CSI"/><see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.EraseInDisplay"/> to clear.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.EraseInLine">
            <summary>
            Clears everything from cursor to the end of the current line.
            </summary>
            <remarks>
            Print <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.CSI"/><see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.EraseInLine"/> to clear.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.HideCursor">
            <summary>
            Hides the cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.ShowCursor">
            <summary>
            Shows/restores the cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.SetBusySpinner">
            <summary>
            Set progress state to a busy spinner. <br/>
            Note: this code works only on ConEmu terminals, and conflicts with push a notification code on iTerm2.
            </summary>
            <remarks>
            <see href="https://conemu.github.io/en/AnsiEscapeCodes.html#ConEmu_specific_OSC">ConEmu specific OSC codes.</see><br/>
            <see href="https://iterm2.com/documentation-escape-codes.html">iTerm2 proprietary escape codes.</see>
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.RemoveBusySpinner">
            <summary>
            Remove progress state, restoring taskbar status to normal. <br/>
            Note: this code works only on ConEmu terminals, and conflicts with push a notification code on iTerm2.
            </summary>
            <remarks>
            <see href="https://conemu.github.io/en/AnsiEscapeCodes.html#ConEmu_specific_OSC">ConEmu specific OSC codes.</see><br/>
            <see href="https://iterm2.com/documentation-escape-codes.html">iTerm2 proprietary escape codes.</see>
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiCodes.SetCursorHorizontal(System.Int32)">
            <summary>
            Moves cursor to the specified column, or the rightmost column if <paramref name="column"/> is greater than the width of the terminal.
            </summary>
            <param name="column">Column index.</param>
            <returns>Control codes to set the desired position.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiDetector">
            <summary>
            Works together with the <see cref="T:Microsoft.Testing.Platform.OutputDevice.Terminal.NativeMethods"/> to figure out if the current console is capable of using ANSI output codes.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiTerminal">
            <summary>
            Terminal writer that is used when writing ANSI is allowed. It is capable of batching as many updates as possible and writing them at the end,
            because the terminal is responsible for rendering the colors and control codes.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiTerminal.KnownFileExtensions">
            <summary>
            File extensions that we will link to directly, all other files
            are linked to their directory, to avoid opening dlls, or executables.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiTerminal.EraseProgress">
            <summary>
            Erases the previously printed live node output.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiTerminalTestProgressFrame">
            <summary>
            Captures <see cref="T:Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressState"/> that was rendered to screen, so we can only partially update the screen on next update.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiTerminalTestProgressFrame.Render(Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiTerminalTestProgressFrame,Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressState[],Microsoft.Testing.Platform.OutputDevice.Terminal.AnsiTerminal)">
            <summary>
            Render VT100 string to update from current to next frame.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.ErrorMessage">
            <summary>
            An error message that was sent to output during the build.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.ErrorMessage.#ctor(System.String)">
            <summary>
            An error message that was sent to output during the build.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.FileUtilities.GetIsFileSystemCaseSensitive">
            <summary>
            Determines whether the file system is case sensitive.
            Copied from https://github.com/dotnet/runtime/blob/73ba11f3015216b39cb866d9fb7d3d25e93489f2/src/libraries/Common/src/System/IO/PathInternal.CaseSensitivity.cs#L41-L59 .
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.IProgressMessage">
            <summary>
            Error or warning message that was sent to screen during the test run.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.ITerminal">
            <summary>
            An ANSI or non-ANSI terminal that is capable of rendering the messages from <see cref="T:Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressStateAwareTerminal"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.NativeMethods.IsWindows">
            <summary>
            Gets a value indicating whether we are running under some version of Windows.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.NativeMethods.StreamHandleType.StdOut">
            <summary>
            StdOut.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.NativeMethods.StreamHandleType.StdErr">
            <summary>
            StdError.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.NonAnsiTerminal">
            <summary>
            Non-ANSI terminal that writes text using the standard Console.Foreground color capabilities to stay compatible with
            standard Windows command line, and other command lines that are not capable of ANSI, or when output is redirected.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor">
            <summary>
            Enumerates the text colors supported by VT100 terminal.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.DarkRed">
            <summary>
            DarkRed.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.DarkGreen">
            <summary>
            DarkGreen.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.DarkYellow">
            <summary>
            DarkYellow.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.DarkBlue">
            <summary>
            DarkBlue.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.DarkMagenta">
            <summary>
            DarkMagenta.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.DarkCyan">
            <summary>
            DarkCyan.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Gray">
            <summary>
            Gray. This entry looks out of order, but in reality 37 is dark white, which is lighter than bright black = Dark Gray in Console colors.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.DarkGray">
            <summary>
            DarkGray. This entry looks out of order, but in reality 90 is bright black, which is darker than dark white = Gray in Console colors.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Red">
            <summary>
            Red.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Green">
            <summary>
            Green.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Yellow">
            <summary>
            Yellow.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Blue">
            <summary>
            Blue.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Magenta">
            <summary>
            Magenta.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.Cyan">
            <summary>
            Cyan.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalColor.White">
            <summary>
            White.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporter">
            <summary>
            Terminal test reporter that outputs test progress and is capable of writing ANSI or non-ANSI output via the given terminal.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporter.NewLineStrings">
            <summary>
            The two directory separator characters to be passed to methods like <see cref="M:System.String.IndexOfAny(System.Char[])"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporter.GetFrameRegex">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match the string "   at ".<br/>
            ○ Match with 2 alternative expressions.<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ "code" capture group.<br/>
                        ○ Match a character other than '\n' greedily at least once.<br/>
                    ○ Match the string " in ".<br/>
                    ○ "file" capture group.<br/>
                        ○ Match a character other than '\n' greedily at least once.<br/>
                    ○ Match the string ":line ".<br/>
                    ○ "line" capture group.<br/>
                        ○ Match a Unicode digit atomically at least once.<br/>
                ○ "code1" capture group.<br/>
                    ○ Match a character other than '\n' greedily at least once.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporter.#ctor(Microsoft.Testing.Platform.Helpers.IConsole,Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporter"/> class with custom terminal and manual refresh for testing.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporter.AppendAssemblyResult(Microsoft.Testing.Platform.OutputDevice.Terminal.ITerminal,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Print a build result summary to the output.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporter.AppendLongDuration(Microsoft.Testing.Platform.OutputDevice.Terminal.ITerminal,System.TimeSpan,System.Boolean,System.Boolean)">
            <summary>
            Appends a long duration in human readable format such as 1h 23m 500ms.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporter.StartCancelling">
            <summary>
            Let the user know that cancellation was triggered.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterCommandLineOptionsProvider.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterCommandLineOptionsProvider.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterCommandLineOptionsProvider.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterCommandLineOptionsProvider.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterCommandLineOptionsProvider.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.BaseDirectory">
            <summary>
            Gets path to which all other paths in output should be relative.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.ShowPassedTests">
            <summary>
            Gets a value indicating whether we should show passed tests.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.ShowAssembly">
            <summary>
            Gets a value indicating whether we should show information about which assembly is the source of the data on screen. Turn this off when running directly from an exe to reduce noise, because the path will always be the same.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.ShowAssemblyStartAndComplete">
            <summary>
            Gets a value indicating whether we should show information about which assembly started or completed. Turn this off when running directly from an exe to reduce noise, because the path will always be the same.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.MinimumExpectedTests">
            <summary>
            Gets minimum amount of tests to run.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.ShowProgress">
            <summary>
            Gets a value indicating whether we should write the progress periodically to screen. When ANSI is allowed we update the progress as often as we can. When ANSI is not allowed we update it every 3 seconds.
            This is a callback to nullable bool, because we don't know if we are running as test host controller until after we setup the console. So we should be polling for the value, until we get non-null boolean
            and then cache that value.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.ShowActiveTests">
            <summary>
            Gets a value indicating whether the active tests should be visible when the progress is shown.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.UseAnsi">
            <summary>
            Gets a value indicating whether we should use ANSI escape codes or disable them. When true the capabilities of the console are autodetected.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.Terminal.TerminalTestReporterOptions.ForceAnsi">
            <summary>
            Gets a value indicating whether we should force ANSI escape codes. When true the ANSI is used without auto-detecting capabilities of the console. This is needed only for testing.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.TestOutcome">
            <summary>
            Outcome of a test.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestOutcome.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestOutcome.Fail">
            <summary>
            Fail.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestOutcome.Passed">
            <summary>
            Passed.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestOutcome.Skipped">
            <summary>
            Skipped.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestOutcome.Timeout">
            <summary>
             Timeout.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestOutcome.Canceled">
            <summary>
            Canceled.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressStateAwareTerminal">
            <summary>
            Terminal that updates the progress in place when progress reporting is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressStateAwareTerminal._cts">
            <summary>
            A cancellation token to signal the rendering thread that it should exit.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressStateAwareTerminal._lock">
            <summary>
            Protects access to state shared between the logger callbacks and the rendering thread.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressStateAwareTerminal._refresher">
            <summary>
            The thread that performs periodic refresh of the console output.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressStateAwareTerminal.ThreadProc">
            <summary>
            The <see cref="F:Microsoft.Testing.Platform.OutputDevice.Terminal.TestProgressStateAwareTerminal._refresher"/> thread proc.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.TestRunArtifact">
            <summary>
            An artifact / attachment that was reported during run.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.TestRunArtifact.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            An artifact / attachment that was reported during run.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.Terminal.WarningMessage">
            <summary>
            A warning message that was sent during run.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.Terminal.WarningMessage.#ctor(System.String)">
            <summary>
            A warning message that was sent during run.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.TextOutputDeviceData">
            <summary>
            Represents a text data for directed to the output device.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.TextOutputDeviceData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.OutputDevice.TextOutputDeviceData"/> class with the specified text.
            </summary>
            <param name="text">The text for the output device.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.TextOutputDeviceData.Text">
            <summary>
            Gets the text for the output device.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.TestProcessRole.TestHost">
            <summary>
            Indicates that the currently running process is the test host.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.TestProcessRole.TestHostController">
            <summary>
            Indicates that the currently running process is the test host controller.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.TestProcessRole.TestHostOrchestrator">
            <summary>
            Indicates that the currently running process is the test host orchestrator.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.DiscoverTestExecutionRequest">
            <summary>
            Represents a request to discover test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.DiscoverTestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext,Microsoft.Testing.Platform.Requests.ITestExecutionFilter)">
            <summary>
            Represents a request to discover test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.DiscoverTestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Requests.DiscoverTestExecutionRequest"/> class.
            </summary>
            <param name="session">The test session context.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.IRequest">
            <summary>
            Represents a request interface.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Requests.IRequest.Session">
            <summary>
            Gets the test session context.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.ITestExecutionFilter">
            <summary>
            Represents a filter for test execution.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.RunTestExecutionRequest">
            <summary>
            Represents a request to run test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.RunTestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext,Microsoft.Testing.Platform.Requests.ITestExecutionFilter)">
            <summary>
            Represents a request to run test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.RunTestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Requests.RunTestExecutionRequest"/> class.
            </summary>
            <param name="session">The test session context.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.TestExecutionRequest">
            <summary>
            Represents a request for test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.TestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext,Microsoft.Testing.Platform.Requests.ITestExecutionFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Requests.TestExecutionRequest"/> class.
            </summary>
            <param name="session">The test session context.</param>
            <param name="filter">The test execution filter.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Requests.TestExecutionRequest.Filter">
            <summary>
            Gets the test execution filter.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Requests.TestExecutionRequest.Session">
            <summary>
            Gets the test session context.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.TestNodeUidListFilter">
            <summary>
            Represents a filter based on test node UIDs.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.TestNodeUidListFilter.#ctor(Microsoft.Testing.Platform.Extensions.Messages.TestNodeUid[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Requests.TestNodeUidListFilter"/> class.
            </summary>
            <param name="testNodeUids">The test node UIDs to filter.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Requests.TestNodeUidListFilter.TestNodeUids">
            <summary>
            Gets the test node UIDs to filter.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.FilterOperator.Not">
            <summary>
            Negate the following expression.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.FilterOperator.And">
            <summary>
            Combine the following expressions with a logical AND.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.FilterOperator.Or">
            <summary>
            Combine the following expressions with a logical OR.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.FilterOperator.Equals">
            <summary>
            Filter the following expression by the given property.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.None">
            <summary>
            Not an operator.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.Separator">
            <summary>
            A separator operator, used to separate multiple filters.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.LeftBrace">
            <summary>
            An opening brace operator.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.RightBrace">
            <summary>
            A closing brace operator.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.LeftParameter">
            <summary>
            Left hand side of a filter expression.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.RightParameter">
            <summary>
            Right hand side of a filter expression.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.FilterEquals">
            <summary>
            Filter equals operator.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.Or">
            <summary>
            Operator used for combining multiple filters with a logical OR.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.And">
            <summary>
            Operator used for combining multiple filters with a logical AND.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.TreeNodeFilter.ParseFilter(System.String)">
            <remarks>
            The current grammar for the filter looks as follows:
            <code>
            TREE_NODE_FILTER = EXPR ( '/' EXPR )*
            EXPR =
              '(' EXPR ')'
              | EXPR OP EXPR
              | NODE_VALUE
            FILTER_EXPR =
              '(' FILTER_EXPR ')'
              | TOKEN '=' TOKEN
              | FILTER_EXPR OP FILTER_EXPR
              | TOKEN
            OP = '&amp;' | '|'
            NODE_VALUE = TOKEN | TOKEN '[' FILTER_EXPR ']'
            TOKEN = string
            </code>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Exception thrown, if the filter is malformed, for example <c>A(|B)</c> or <c>A)</c>.
            </exception>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.TreeNodeFilter.MatchesFilter(System.String,Microsoft.Testing.Platform.Extensions.Messages.PropertyBag)">
            <summary>
            Checks whether a node path matches the tree node filter.
            </summary>
            <param name="testNodeFullPath">The segment URL encoded path.</param>
            <param name="filterableProperties">The URL encoded node properties.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.ValueAndPropertyExpression">
            <summary>
            This represents an expression that combines a value and a property expression,
            for instance <c>MethodName[Trait=Foo]</c>.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.ValueAndPropertyExpression.#ctor(Microsoft.Testing.Platform.Requests.FilterExpression,Microsoft.Testing.Platform.Requests.FilterExpression)">
            <summary>
            This represents an expression that combines a value and a property expression,
            for instance <c>MethodName[Trait=Foo]</c>.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.IMessageFormatter">
            <summary>
            A message formatter converts objects into a serialized format and can deserialize data into
            corresponding objects.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.IMessageHandler.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Reads the next <see cref="T:Microsoft.Testing.Platform.ServerMode.RpcMessage"/> payload from the client.
            </summary>
            <remarks>
            The reading is likely backed by a data stream and the message handler is responsible
            for reading the data stream and deserialization of the message.
            If the reading from the stream is canceled will throw an exception.
            If deserialization of the message fails, also will throw an exception.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.IMessageHandler.WriteRequestAsync(Microsoft.Testing.Platform.ServerMode.RpcMessage,System.Threading.CancellationToken)">
            <summary>
            Writes the next <see cref="T:Microsoft.Testing.Platform.ServerMode.RpcMessage"/> to the client.
            </summary>
            <remarks>
            The writing is likely backed by a data stream and the message handler is responsible
            for writing to the data stream and serialization of the message.
            If serialization of the message fails, will throw an exception.
            </remarks>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer">
            <summary>
            This class converts the events send to the message bus and sends these back to the client.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.#ctor(System.IServiceProvider,Microsoft.Testing.Platform.Hosts.IServerTestHost,System.Guid,Microsoft.Testing.Platform.Helpers.ITask)">
            <summary>
            This class converts the events send to the message bus and sends these back to the client.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.RequestMessage">
            <summary>
            A request is a message for which the server should return a corresponding
            <see cref="T:Microsoft.Testing.Platform.ServerMode.ErrorMessage"/> or <see cref="T:Microsoft.Testing.Platform.ServerMode.ResponseMessage"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.RequestMessage.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            A request is a message for which the server should return a corresponding
            <see cref="T:Microsoft.Testing.Platform.ServerMode.ErrorMessage"/> or <see cref="T:Microsoft.Testing.Platform.ServerMode.ResponseMessage"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.NotificationMessage">
            <summary>
            A notification message is a message that notifies the server of an event.
            There's no corresponding response that the server should send back and as such
            no Id is specified when sending a notification.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.NotificationMessage.#ctor(System.String,System.Object)">
            <summary>
            A notification message is a message that notifies the server of an event.
            There's no corresponding response that the server should send back and as such
            no Id is specified when sending a notification.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.ErrorMessage">
            <summary>
            An error message is sent if some exception was thrown when processing the request.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.ErrorMessage.#ctor(System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            An error message is sent if some exception was thrown when processing the request.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.ResponseMessage">
            <summary>
            An response message is sent if a request is handled successfully.
            </summary>
            <remarks>
            If the RPC handler returns a <see cref="T:System.Threading.Tasks.Task"/> the <paramref name="Result"/>
            will be returned as <c>null</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.ResponseMessage.#ctor(System.Int32,System.Object)">
            <summary>
            An response message is sent if a request is handled successfully.
            </summary>
            <remarks>
            If the RPC handler returns a <see cref="T:System.Threading.Tasks.Task"/> the <paramref name="Result"/>
            will be returned as <c>null</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.SerializerUtilities.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Testing.Platform.ServerMode.SerializerUtilities"/> class.
            Is a known fact that this serializer jsonite based suffer of boxing/unboxing issue but it's only for netstandard2.0 and we don't optimize for it for now.
            We aim to rewrite all the serialization with the best perfomance using .NET System.Text.Json api inside the Json.cs file.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.IClientInfo.Id">
            <summary>
            Gets the client ID.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.IClientInfo.Version">
            <summary>
            Gets the client version.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.IPlatformInformation.Name">
            <summary>
            Gets the platform's name.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.IPlatformInformation.BuildDate">
            <summary>
            Gets the platform's build date.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.IPlatformInformation.Version">
            <summary>
            Gets the platform's version.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.IPlatformInformation.CommitHash">
            <summary>
            Gets the platform's commit hash.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Services.ServiceProviderExtensions">
            <summary>
            Extension methods for getting services from an <see cref="T:System.IServiceProvider" />.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetRequiredService``1(System.IServiceProvider)">
            <summary>
            Gets the required service of type <typeparamref name="TService"/> from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="provider">The service provider.</param>
            <returns>The required service of type <typeparamref name="TService"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="provider"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the required service is not found.</exception>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetService``1(System.IServiceProvider)">
            <summary>
            Gets the service of type <typeparamref name="TService"/> from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="provider">The service provider.</param>
            <returns>The service of type <typeparamref name="TService"/> or null if not found.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="provider"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetMessageBus(System.IServiceProvider)">
            <summary>
            Gets the message bus from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The message bus.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetConfiguration(System.IServiceProvider)">
            <summary>
            Gets the configuration from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The configuration.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetCommandLineOptions(System.IServiceProvider)">
            <summary>
            Gets the command line options from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The command line options.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetLoggerFactory(System.IServiceProvider)">
            <summary>
            Gets the logger factory from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The logger factory.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetOutputDevice(System.IServiceProvider)">
            <summary>
            Gets the output device from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The output device.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetClientInfo(System.IServiceProvider)">
            <summary>
            Gets the IClientInfo from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The IClientInfo object.</returns>
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.Description">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.DataTypesConsumed">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.TestApplicationResult.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Telemetry.ITelemetryCollector">
            <summary>
            This service allows to collect usage information.
            For instance how long different operations run for, what kinds of capabilities
            are being enabled, disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Telemetry.ITelemetryCollector.LogEventAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs a telemetry event.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllerInfo.IsCurrentProcessTestHostController">
            <summary>
            Gets information whether the current process is a test controller or not.
            When null the value has not been set yet, it is figured out while we are building the test application.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager">
            <summary>
            Represents a manager for test host controllers.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager.AddEnvironmentVariableProvider(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostEnvironmentVariableProvider})">
            <summary>
            Adds an environment variable provider to the test host controller manager.
            </summary>
            <param name="environmentVariableProviderFactory">The factory method that creates the environment variable provider.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager.AddEnvironmentVariableProvider``1(Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory{``0})">
            <summary>
            Adds an environment variable provider to the test host controller manager.
            </summary>
            <typeparam name="T">The type of the environment variable provider.</typeparam>
            <param name="compositeServiceFactory">The factory method that creates the composite service.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager.AddProcessLifetimeHandler(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler})">
            <summary>
            Adds a process lifetime handler to the test host controller manager.
            </summary>
            <param name="lifetimeHandler">The factory method that creates the process lifetime handler.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager.AddProcessLifetimeHandler``1(Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory{``0})">
            <summary>
            Adds a process lifetime handler to the test host controller manager.
            </summary>
            <typeparam name="T">The type of the process lifetime handler.</typeparam>
            <param name="compositeServiceFactory">The factory method that creates the composite service.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.ClientInfo">
            <summary>
            Represents client information.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.ClientInfo.Id">
            <summary>
            Gets the client ID.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.ClientInfo.Version">
            <summary>
            Gets the client version.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.ITestHostManager">
            <summary>
            Represents the interface for managing the test host.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddTestApplicationLifecycleCallbacks(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks})">
            <summary>
            Adds a test application lifecycle callbacks.
            </summary>
            <param name="testApplicationLifecycleCallbacks">The factory method for creating the test application lifecycle callbacks.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddDataConsumer(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer})">
            <summary>
            Adds a data consumer.
            </summary>
            <param name="dataConsumerFactory">The factory method for creating the data consumer.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddDataConsumer``1(Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory{``0})">
            <summary>
            Adds a data consumer of type T.
            </summary>
            <typeparam name="T">The type of the data consumer.</typeparam>
            <param name="compositeServiceFactory">The composite extension factory for creating the data consumer.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddTestSessionLifetimeHandle(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler})">
            <summary>
            Adds a test session lifetime handle.
            </summary>
            <param name="testSessionLifetimeHandleFactory">The factory method for creating the test session lifetime handle.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddTestSessionLifetimeHandle``1(Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory{``0})">
            <summary>
            Adds a test session lifetime handle of type T.
            </summary>
            <typeparam name="T">The type of the test session lifetime handle.</typeparam>
            <param name="compositeServiceFactory">The composite extension factory for creating the test session lifetime handle.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.SessionUid">
            <summary>
            Represents a unique identifier for a session.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.SessionUid.#ctor(System.String)">
            <summary>
            Represents a unique identifier for a session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.SessionUid.Value">
            <summary>
            Gets the value of the session identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.SessionUid.ToString">
            <summary>
            Returns a string representation of the SessionUid.
            </summary>
            <returns>A string representation of the SessionUid.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.TestSessionContext">
            <summary>
            Represents the context of a test session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.TestSessionContext.SessionUid">
            <summary>
            Gets the unique identifier of the test session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.TestSessionContext.Client">
            <summary>
            Gets the client information associated with the test session.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.WellKnownClients">
            <summary>
            Represents well-known clients in the testing platform.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.TestHost.WellKnownClients.TestingPlatformConsole">
            <summary>
            Represents the Testing Platform Console client.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.TestHost.WellKnownClients.VisualStudio">
            <summary>
            Represents the Visual Studio Testing Platform Client.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotCreateTestExecutionFilterErrorMessage">
            <summary>Failed to create a test execution filter</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CompositeServiceFactoryInstanceAlreadyRegistered">
            <summary>The same instance of 'CompositeExtensonFactory' is already registered</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConfigurationManagerCannotFindDefaultJsonConfigurationErrorMessage">
            <summary>Could not find the default json configuration</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConsoleTestExecutionFilterFactoryDescription">
            <summary>Creates the right test execution filter for console mode</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConsoleTestExecutionFilterFactoryDisplayName">
            <summary>Console test execution filter factory</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ExtensionDoesNotImplementGivenInterfaceErrorMessage">
            <summary>Extension of type '{0}' is not implementing the required '{1}' interface</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ExtensionWithSameUidAlreadyRegisteredErrorMessage">
            <summary>Another extension with same the same UID '{0}' has already been registered. Registered extension is of type '{1}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonConfigurationFileParserDuplicateKeyErrorMessage">
            <summary>A duplicate key '{0}' was found</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonConfigurationFileParserTopLevelElementIsNotAnObjectErrorMessage">
            <summary>Top-level JSON element must be an object. Instead, '{0}' was found</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonConfigurationFileParserUnsupportedTokenErrorMessage">
            <summary>Unsupported JSON token '{0}' was found</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerTestExecutionFilterFactoryDescription">
            <summary>Creates the right test execution filter for server mode</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerTestExecutionFilterFactoryDisplayName">
            <summary>Server test execution filter factory</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServiceProviderCannotFindServiceErrorMessage">
            <summary>Cannot find service of type '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServiceProviderServiceAlreadyRegistered">
            <summary>Instance of type '{0}' is already registered</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServiceProviderShouldNotRegisterTestFramework">
            <summary>Instances of type 'ITestFramework' should not be registered through the service provider but through 'ITestApplicationBuilder.RegisterTestFramework'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestAdapterInvokerFactoryAlreadySetErrorMessage">
            <summary>An 'ITestFrameworkInvoker' factory is already set</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationBuilderApplicationAlreadyRegistered">
            <summary>The application has already been built</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationBuilderFrameworkAdapterFactoryAlreadyRegisteredErrorMessage">
            <summary>The test framework adapter factory has already been registered</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationBuilderTestFrameworkCapabilitiesAlreadyRegistered">
            <summary>The test framework capabilities factory has already been registered</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationBuilderTestFrameworkNotRegistered">
            <summary>The test framework adapter has not been registered. Use 'ITestApplicationBuilder.RegisterTestFramework' to register it</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationResultDescription">
            <summary>Determine the result of the test application execution</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationResultDisplayName">
            <summary>Test application result</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationVSTestModeTooManyBuilders">
            <summary>VSTest mode only supports a single TestApplicationBuilder per process</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestHostAdapterInvokerFailedTestSessionErrorMessage">
            <summary>Test adapter test session failure</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterCannotContainSlashCharacterErrorMessage">
            <summary>A filter '{0}' should not contain a '/' character</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterEscapeCharacterShouldNotBeLastErrorMessage">
            <summary>An escape character should not terminate the filter string '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterOnlyLastLevelCanContainMutiLevelWildcardErrorMessage">
            <summary>Only the final filter path can contain '**' wildcard</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterOperatorNotAllowedErrorMessage">
            <summary>Unexpected operator '&amp;' or '|' within filter expression '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterPathShouldStartWithSlashErrorMessage">
            <summary>Invalid node path, expected root as first character '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterUnbalancedFilterErrorMessage">
            <summary>Filter expression '{0}' contains an unbalanced number of '{1}' '{2}' operators</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterUnexpectedSlashOperatorErrorMessage">
            <summary>Filter contains an unexpected '/' operator inside a parenthesized expression</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TEstExecutionFilterFactoryFactoryAlreadySetErrorMessage">
            <summary>An 'ITestExecutionFilterFactory' factory is already set</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotRemoveEnvironmentVariableAtThisStageErrorMessage">
            <summary>Cannot remove environment variables at this stage</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotRemoveEnvironmentVariableItIsLockedErrorMessage">
            <summary>Extension '{0}' tried to remove environment variable '{1}' but it was locked by extension '{2}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotSetEnvironmentVariableAtThisStageErrorMessage">
            <summary>Cannot set environment variables at this stage</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotSetEnvironmentVariableItIsLockedErrorMessage">
            <summary>Extension '{0}' tried to set environment variable '{1}' but it was locked by extension '{2}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ProcessHasNotYetExitedErrorMessage">
            <summary>Process should have exited before we can determine this value</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotStartProcessErrorMessage">
            <summary>Cannot start process '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.EnvironmentVariableProviderFailedWithError">
            <summary>Provider '{0}' (UID: {1}) failed with error: {2}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.GlobalValidationOfTestHostEnvironmentVariablesFailedErrorMessage">
            <summary>The following 'ITestHostEnvironmentVariableProvider' providers rejected the final environment variables setup:</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestFrameworkProxyApiShouldNotBeCalled">
            <summary>Method '{0}' should not have been called on this proxy object</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestProcessDidNotExitGracefullyErrorMessage">
            <summary>Test application process didn't exit gracefully, exit code is '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotCreateUniqueLogFileErrorMessage">
            <summary>Failed to create a unique log file after 3 seconds. Lastly tried file name is '{0}'.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.FailedToWriteLogToChannelErrorMessage">
            <summary>Failed to write the log to the channel. Missed log content:
            {0}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerLogMessageDescription">
            <summary>This data represents a server log message</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerLogMessageDisplayName">
            <summary>Server log message</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TimeoutAcquiringSemaphoreErrorMessage">
            <summary>Failed to acquire semaphore before timeout of '{0}' seconds</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TimeoutFlushingLogsErrorMessage">
            <summary>Failed to flush logs before the timeout of '{0}' seconds</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnexpectedExceptionInFileLoggerErrorMessage">
            <summary>An unexpected exception occurred in 'FileLogger.WriteLogToFileAsync'.
            {0}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnexpectedStateErrorMessage">
            <summary>Unexpected state in file '{0}' at line '{1}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnreachableLocationErrorMessage">
            <summary>This program location is thought to be unreachable. File='{0}' Line={1}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.RetryFailedAfterTriesErrorMessage">
            <summary>Retry failed after {0} times</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineInvalidArgumentsForOption">
            <summary>Option '--{0}' has invalid arguments: {1}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineInvalidConfiguration">
            <summary>Invalid configuration for provider '{0}' (UID: {1}). Error: {2}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionExpectsAtLeastArguments">
            <summary>Option '--{0}' from provider '{1}' (UID: {2}) expects at least {3} arguments</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionExpectsAtMostArguments">
            <summary>Option '--{0}' from provider '{1}' (UID: {2}) expects at most {3} arguments</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionExpectsNoArguments">
            <summary>Option '--{0}' from provider '{1}' (UID: {2}) expects no arguments</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionIsUsingReservedPrefix">
            <summary>Option `--{0}` from provider '{1}' (UID: {2}) is using the reserved prefix '--internal'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineUnknownOption">
            <summary>Unknown option '--{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.InvalidCommandLineArguments">
            <summary>Invalid command line arguments:</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineInvalidArityErrorMessage">
            <summary>Invalid arity, maximum must be greater than minimum</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineInvalidOptionName">
            <summary>Invalid option name '{0}', it must contain only letter and '-' (e.g. my-option)</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionIsDeclaredByMultipleProviders">
            <summary>Option '--{0}' is declared by multiple extensions: '{1}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionIsDeclaredByMultipleProvidersWorkaround">
            <summary>You can fix the previous option clash by overriding the option name using the configuration file</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionIsReserved">
            <summary>Option '--{0}' is reserved and cannot be used by providers: '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserUnexpectedArgument">
            <summary>Unexpected argument {0}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserUnexpectedNullArgument">
            <summary>Unexpected null argument at index {0}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserUnexpectedSingleQuoteInArgument">
            <summary>Unexpected single quote in argument: {0}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserUnexpectedSingleQuoteInArgumentForOption">
            <summary>Unexpected single quote in argument: {0} for option '--{1}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpApplicationUsage">
            <summary>Usage {0} [option providers] [extension option providers]</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpExecuteTestApplication">
            <summary>Execute a .NET Test Application.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpExtensionOptions">
            <summary>Extension options:</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpNoExtensionRegistered">
            <summary>No extension registered.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpOptions">
            <summary>Options:</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpTestApplicationRunner">
            <summary>&lt;test application runner&gt;</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.NotAvailable">
            <summary>Not available</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.NotFound">
            <summary>Not found</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineClientHostOptionDescription">
            <summary>Specify the hostname of the client.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineClientPortOptionDescription">
            <summary>Specify the port of the client.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticFileLoggerSynchronousWriteOptionDescription">
            <summary>Force the built-in file logger to write the log synchronously.
            Useful for scenario where you don't want to lose any log (i.e. in case of crash).
            Note that this is slowing down the test execution.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOptionDescription">
            <summary>Enable the diagnostic logging. The default log level is 'Trace'.
            The file will be written in the output directory with the name log_[yyMMddHHmmssfff].diag</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOptionExpectsSingleArgumentErrorMessage">
            <summary>'--diagnostic-verbosity' expects a single level argument ('Trace', 'Debug', 'Information', 'Warning', 'Error', or 'Critical')</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOptionIsMissing">
            <summary>'--{0}' requires '--diagnostic' to be provided</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOutputDirectoryOptionDescription">
            <summary>Output directory of the diagnostic logging.
            If not specified the file will be generated inside the default 'TestResults' directory.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOutputFilePrefixOptionDescription">
            <summary>Prefix for the log file name that will replace '[log]_.'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticVerbosityOptionDescription">
            <summary>Define the level of the verbosity for the --diagnostic.
            The available values are 'Trace', 'Debug', 'Information', 'Warning', 'Error', and 'Critical'.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiscoverTestsOptionDescription">
            <summary>List available tests.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineHelpOptionDescription">
            <summary>Show the command line help.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineInfoOptionDescription">
            <summary>Display .NET test application information.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineMinimumExpectedTestsIncompatibleDiscoverTests">
            <summary>'--list-tests' and '--minimum-expected-tests' are incompatible options</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineMinimumExpectedTestsOptionSingleArgument">
            <summary>'--minimum-expected-tests' expects a single non-zero positive integer value
            (e.g. '--minimum-expected-tests 10')</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineNoBannerOptionDescription">
            <summary>Do not display the startup banner, the copyright message or the telemetry banner.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLinePortOptionDescription">
            <summary>Specify the port of the server.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLinePortOptionSingleArgument">
            <summary>'--{0}' expects a single valid port as argument</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineProviderDescription">
            <summary>Microsoft Testing Platform command line provider</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineProviderDisplayName">
            <summary>Platform command line provider</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineResultDirectoryOptionDescription">
            <summary>The directory where the test results are going to be placed.
            If the specified directory doesn't exist, it's created.
            The default is TestResults in the directory that contains the test application.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineServerOptionDescription">
            <summary>Enable the server mode.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineSkipBuildersNumberCheckOptionDescription">
            <summary>For testing purposes</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineTestHostControllerPIDOptionDescription">
            <summary>Eventual parent test host controller PID.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDotnetTestPipe">
            <summary>dotnet test pipe.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineVSTestAdapterModeOptionDescription">
            <summary>Bridge to VSTest APIs</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterDescription">
            <summary>Use a tree filter to filter down the tests to execute</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConnectingToClientHost">
            <summary>Connecting to client host '{0}' port '{1}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonRpcTcpServerDescription">
            <summary>JsonRpc server implementation based on the test platform protocol specification.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonRpcTcpServerToSingleClientDescription">
            <summary>JsonRpc server to client handshake, implementation based on the test platform protocol specification.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StartingServer">
            <summary>Starting server. Listening on port '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnknownCommunicationProtocolErrorMessage">
            <summary>The communication protocol '{0}' is not supported</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TelemetryNotice">
            <summary>Telemetry
            ---------
            Microsoft Testing Platform collects usage data in order to help us improve your experience. The data is collected by Microsoft and are not shared with anyone.
            You can opt-out of telemetry by setting the TESTINGPLATFORM_TELEMETRY_OPTOUT  ...</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TelemetryProviderAlreadySetErrorMessage">
            <summary>Telemetry provider is already set</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnexpectedCallTelemetryIsDisabledErrorMessage">
            <summary>Unexpected telemetry call, the telemetry is disabled.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CouldNotFindDirectoryErrorMessage">
            <summary>Could not find directory '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.InternalLoopAsyncDidNotExitSuccessfullyErrorMessage">
            <summary>Method '{0}' did not exit successfully</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.NoSerializerRegisteredWithIdErrorMessage">
            <summary>No serializer registered with ID '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.NoSerializerRegisteredWithTypeErrorMessage">
            <summary>No serializer registered with type '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnexpectedExceptionDuringByteConversionErrorMessage">
            <summary>An unexpected exception occurred during byte conversion</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineIgnoreExitCodeOptionDescription">
            <summary>Do not report non successful exit value for specific exit codes
            (e.g. '--ignore-exit-code 8;9' ignore exit code 8 and 9 and will return 0 in these case)</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineExitOnProcessExitOptionDescription">
            <summary>Exit the test process if dependent process exits. PID must be provided.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineExitOnProcessExitSingleArgument">
            <summary>'--{0}' expects a single int PID argument</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineExitOnProcessExitInvalidDependentProcess">
            <summary>Invalid PID '{0}'
            {1}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.Aborted">
            <summary>Aborted</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.Actual">
            <summary>Actual</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CancelledLowercase">
            <summary>canceled</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CancellingTestSession">
            <summary>Canceling the test session...</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.DiagnosticFileLevelWithAsyncFlush">
            <summary>Diagnostic file (level '{0}' with async flush): {1}"</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.DiagnosticFileLevelWithFlush">
            <summary>Diagnostic file (level '{0}' with sync flush): {1}"</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.Expected">
            <summary>Expected</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.Failed">
            <summary>Failed</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.FailedLowercase">
            <summary>failed</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ForTest">
            <summary>For test</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.InProcessArtifactsProduced">
            <summary>In process file artifacts produced:</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.MinimumExpectedTestsPolicyViolation">
            <summary>Minimum expected tests policy violation, tests ran {0}, minimum expected {1}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.OutOfProcessArtifactsProduced">
            <summary>Out of process file artifacts produced:</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.Passed">
            <summary>Passed</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PassedLowercase">
            <summary>passed</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.Skipped">
            <summary>Skipped</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.SkippedLowercase">
            <summary>skipped</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StackTrace">
            <summary>Stack Trace</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.Total">
            <summary>Total</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ZeroTestsRan">
            <summary>Zero tests ran</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConsoleIsAlreadyInBatchingMode">
            <summary>Console is already in batching mode.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.FailedWithErrors">
            <summary>failed with {0} error(s)</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.FailedWithErrorsAndWarnings">
            <summary>failed with {0} error(s) and {1} warning(s)</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.FailedWithWarnings">
            <summary>failed with {0} warning(s)</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.RunningTestsFrom">
            <summary>Running tests from</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestRunSummary">
            <summary>Test run summary:</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.FromFile">
            <summary>from</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StackFrameAt">
            <summary>at</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StackFrameIn">
            <summary>in</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TerminalNoAnsiOptionDescription">
            <summary>Disable outputting ANSI escape characters to screen.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TerminalNoProgressOptionDescription">
            <summary>Disable reporting progress to screen.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TerminalTestReporterDescription">
            <summary>Writes test results to terminal.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TerminalTestReporterDisplayName">
            <summary>Terminal test reporter</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TerminalOutputOptionDescription">
            <summary>Output verbosity when reporting tests.
            Valid values are 'Normal', 'Detailed'. Default is 'Normal'.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TerminalOutputOptionInvalidArgument">
            <summary>--output expects a single parameter with value 'Normal' or 'Detailed'.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineTimeoutArgumentErrorMessage">
            <summary>'timeout' option should have one argument as string in the format &lt;value&gt;[h|m|s] where 'value' is float</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineTimeoutOptionDescription">
            <summary>A global test execution timeout.
            Takes one argument as string in the format &lt;value&gt;[h|m|s] where 'value' is float.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.LoggerFactoryNotReady">
            <summary>The ILoggerFactory has not been built yet.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.MessageBusNotReady">
            <summary>The message bus has not been built yet or is no more usable at this stage.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionsNotReady">
            <summary>The ICommandLineOptions has not been built yet.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.MissingClientPortFoJsonRpc">
            <summary>Expected --client-port when jsonRpc protocol is used.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StandardError">
            <summary>Error output</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StandardOutput">
            <summary>Standard output</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.DiscoveringTestsFrom">
            <summary>Discovering tests from</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestDiscoverySummary">
            <summary>Discovered {0} tests in {1} assemblies.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.DiscoveredTestsInAssembly">
            <summary>Discovered {0} tests in assembly</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestDiscoverySummarySingular">
            <summary>Discovered {0} tests.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ExitCode">
            <summary>Exit code</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserResponseFileNotFound">
            <summary>The response file '{0}' was not found</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserFailedToReadResponseFile">
            <summary>Failed to read response file '{0}'. {1}.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineMinimumExpectedTestsOptionDescription">
            <summary>Specifies the minimum number of tests that are expected to run.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineConfigFileOptionDescription">
            <summary>Specifies a testconfig.json file.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConfigurationFileNotFound">
            <summary>The configuration file '{0}' specified with '--config-file' could not be found.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ActiveTestsRunning_MoreTestsCount">
            <summary>and {0} more</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ActiveTestsRunning_FullTestsCount">
            <summary>{0} tests running</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StartingTestSession">
            <summary>Starting test session.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StartingTestSessionWithLogFilePath">
            <summary>Starting test session. The log file path is '{0}'.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.FinishedTestSession">
            <summary>Finished test session.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerTestHostDisplayName">
            <summary>Server mode test host</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerTestHostDescription">
            <summary>The 'ITestHost' implementation used when running server mode.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnobservedTaskExceptionWarningMessage">
            <summary>[ServerTestHost.OnTaskSchedulerUnobservedTaskException] Unhandled exception: {0}</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ExceptionDuringCancellationWarningMessage">
            <summary>Exception during the cancellation of request id '{0}'</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineMaxFailedTestsOptionDescription">
            <summary>Specifies a maximum number of test failures that, when exceeded, will abort the test run.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.MaxFailedTestsMustBePositive">
            <summary>The option '--maximum-failed-tests' must be a positive integer. The value '{0}' is not valid.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.AbortForMaxFailedTestsDescription">
            <summary>Extension used to support '--maximum-failed-tests'. When a given failures threshold is reached, the test run will be aborted.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ReachedMaxFailedTestsMessage">
            <summary>Test session is aborting due to reaching failures ('{0}') specified by the '--maximum-failed-tests' option.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.AbortForMaxFailedTestsCapabilityNotAvailable">
            <summary>The current test framework does not implement 'IGracefulStopTestExecutionCapability' which is required for '--maximum-failed-tests' feature.</summary>
        </member>
        <member name="T:PlatformVersion">
            <summary>
            Repository version, created at build time.
            </summary>
        </member>
    </members>
</doc>
